{"version":3,"sources":["webpack:///bundle.js","webpack:///../public/assets/js/user/app.js","webpack:///../public/assets/js/user/GameView.js","webpack:///../public/assets/js/user/layoutManager.js","webpack:///../public/assets/js/user/utils/mathUtils.js","webpack:///../public/assets/js/user/Board.js","webpack:///../public/assets/js/user/Vector.js","webpack:///../public/assets/js/user/Grid.js","webpack:///../public/assets/js/user/GameElements/Dot.js","webpack:///../public/assets/js/user/Renderer.js","webpack:///../public/assets/js/user/rendererComponents/Dot.js","webpack:///../public/assets/js/user/rendererComponents/turnAnimations.js","webpack:///../public/assets/js/user/utils/tweens.js","webpack:///../public/assets/js/user/utils/ticker.js","webpack:///../public/assets/js/user/utils/animationTest.js"],"names":["webpackJsonp","module","exports","__webpack_require__","$","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","start","window","app","MyApp","script","document","createElement","onload","stats","Stats","domElement","style","cssText","body","appendChild","requestAnimationFrame","loop","update","src","head","inIframe","self","top","e","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_GameView","_GameView2","location","origin","protocol","host","Common","debug","resize","this","$el","gameView","container","value","load","console","log","setTimeout","call","_layoutManager","_layoutManager2","_mathUtils","_mathUtils2","_Board","_Board2","_Renderer","_Renderer2","_ticker","_ticker2","_animationTest","_animationTest2","GameView","options","el","PIXI","autoDetectRenderer","width","height","backgroundColor","antialias","append","view","mousePressed","currentMousePos","clientX","clientY","board","renderController","renderer","bindEvents","add","addEventListener","mouseDown","bind","mouseMove","mouseUp","hasChanged","hoverEl","getHoverEl","mouseInEl","activeEls","push","loopCompleted","handleMouseInEl","handleMouseOutEl","turn","x","y","grid","elements","element","elRect","gridPos","elWidth","elHeight","pointInRect","circle","radius","maxElSize","circlePointCollision","currentEl","neighbors","getNeighbors","dotType","id","indexOf","mostRecentActiveEl","secondMostRecentActiveEl","vectToSecondMostRecent","subtract","rectBetweenRecents","shiftX","shiftY","pop","render","stage","LayoutManager","innerWidth","innerHeight","_this","layoutManager","utils","norm","val","min","max","lerp","map","sourceMin","sourceMax","destMin","destMax","clamp","Math","distance","x0","y0","x1","y1","dx","dy","sqrt","circleCollision","c0","c1","rect","inRange","rangeIntersect","min0","max0","min1","max1","rectIntersect","r0","r1","randomRange","random","randomInt","floor","randomDist","iterations","total","roundToPlaces","places","mult","pow","round","roundNearest","nearest","degreesToRads","degrees","PI","radsToDegrees","radians","rotateTo","p0","angle","cos","sin","p1","quadraticBezier","p2","t","pFinal","cubicBezier","p3","multicurve","points","context","midx","midy","moveTo","quadraticCurveTo","_Vector","_Vector2","_Grid","_Grid2","_Dot","_Dot2","Board","j","newDot","setElement","cloned","bool","setChanged","startTurn","removeActiveElsFromGrid","addPreviousPositions","shiftElsDown","createNewEls","finishTurn","typeId","previousGridPos","sort","a","b","posVect","elAbove","getElement","_i","_element","Vector","vector","NEIGHBORS","Grid","Array","DOTTYPES","name","color","Dot","_interopRequireWildcard","newObj","hasOwnProperty","_turnAnimations","turnAnimations","_tweens","tweens","Renderer","Container","activeElConnections","Graphics","addChild","staticStateEls","prepareStaticData","resetRendererState","isAnimatingTurn","children","removeChild","destroy","shiftingEls","nonShiftingEls","newEls","turnAnimationSteps","usePrevPosForShiftingEls","canShowNew","dot","currentX","currentY","loopedRadius","maxLoopedRadius","loopedAlpha","removeChildren","removeChildAt","tween","_i2","_element2","_i3","_element3","_i4","_element4","remove","clear","alpha","_i5","_element5","_dot3","_dot2","prevX","prevY","destRadius","_dot","hideActiveElConnection","shrinkActive","shiftDown","populateNew","prepareTurnAnimationData","drawTurnAnimationBoard","drawActiveElConnections","_loop","getNewTween","easeInOutQuad","usePreviousPos","fillStyle","globalAlpha","beginPath","arc","fill","lineStyle","prevEl","lineTo","lastEl","firstEl","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_PIXI$Container","getPrototypeOf","createChildren","circleSpriteGenerator","createNewCircle","mainBaseRadius","main","usePreviousPosition","position","currentRadius","Circle","_PIXI$Sprite","texture","baseRadius","_this2","anchor","scale","Sprite","CircleSpriteGenerator","graphics","loopCircleTextures","circleTextures","isMain","cache","toString","beginFill","drawEllipse","generateTexture","sprite","waitForFrames","frames","shift","tweenLength","state","hideCompleted","easeInOutQuint","args","shrinkCompleted","baseShiftFrameDelay","sortedShift2DArr","flooredX","filter","Boolean","elementArr","shiftFrameDelay","shiftCompleted","totalNewEls","spawnFrameDelay","populationComplete","easeOutBack","duration","easingFn","onProgress","onComplete","prop","starts","changes","startTime","Date","currentTime","arguments","linearTween","c","d","easeInQuad","easeOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuint","easeOutQuint","s","undefined","easeOutBounce","ticker","Ticker","animationTest"],"mappings":"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","file":"bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t// import PIXI from 'pixi.js';\n\t\n\t// imports\n\t\n\t\n\t__webpack_require__(2);\n\t\n\tvar _GameView = __webpack_require__(6);\n\t\n\tvar _GameView2 = _interopRequireDefault(_GameView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//first thing: monkey patch\n\tif (!location.origin) {\n\t  location.origin = location.protocol + \"//\" + location.host;\n\t}\n\t\n\t//an easy to access global object\n\twindow.Common = window.Common || {};\n\t\n\t// set debug status\n\twindow.debug = true;\n\t\n\t$(window).resize();\n\t\n\tvar MyApp = function () {\n\t  function MyApp() {\n\t    _classCallCheck(this, MyApp);\n\t\n\t    this.$el = $('#content');\n\t\n\t    this.gameView = new _GameView2.default({\n\t      container: this.$el\n\t    });\n\t\n\t    this.start();\n\t  }\n\t\n\t  _createClass(MyApp, [{\n\t    key: \"start\",\n\t    value: function start() {\n\t      this.gameView.start();\n\t\n\t      $(window).resize();\n\t    }\n\t  }]);\n\t\n\t  return MyApp;\n\t}();\n\t\n\t//kickoff app\n\t\n\t\n\tif (inIframe()) {\n\t  $(window).load(function () {\n\t    console.log('starting app (in iframe)');\n\t    setTimeout(function () {\n\t      start();\n\t    }, 1000);\n\t  });\n\t} else {\n\t  $(window).load(function () {\n\t    console.log('starting app');\n\t    start();\n\t  });\n\t}\n\t\n\tfunction start() {\n\t  window.app = new MyApp();\n\t  (function () {\n\t    var script = document.createElement('script');script.onload = function () {\n\t      var stats = new Stats();stats.domElement.style.cssText = 'position:fixed;left:0;top:0;z-index:10000';document.body.appendChild(stats.domElement);requestAnimationFrame(function loop() {\n\t        stats.update();requestAnimationFrame(loop);\n\t      });\n\t    };script.src = '//rawgit.com/mrdoob/stats.js/master/build/stats.min.js';document.head.appendChild(script);\n\t  })();\n\t}\n\t\n\tfunction inIframe() {\n\t  try {\n\t    return window.self !== window.top;\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _layoutManager = __webpack_require__(7);\n\t\n\tvar _layoutManager2 = _interopRequireDefault(_layoutManager);\n\t\n\tvar _mathUtils = __webpack_require__(8);\n\t\n\tvar _mathUtils2 = _interopRequireDefault(_mathUtils);\n\t\n\tvar _Board = __webpack_require__(9);\n\t\n\tvar _Board2 = _interopRequireDefault(_Board);\n\t\n\tvar _Renderer = __webpack_require__(13);\n\t\n\tvar _Renderer2 = _interopRequireDefault(_Renderer);\n\t\n\tvar _ticker = __webpack_require__(17);\n\t\n\tvar _ticker2 = _interopRequireDefault(_ticker);\n\t\n\tvar _animationTest = __webpack_require__(18);\n\t\n\tvar _animationTest2 = _interopRequireDefault(_animationTest);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar GameView = function () {\n\t  function GameView(options) {\n\t    _classCallCheck(this, GameView);\n\t\n\t    this.el = PIXI.autoDetectRenderer(_layoutManager2.default.width, _layoutManager2.default.height, { backgroundColor: 0xEEEEEE, antialias: true });\n\t\n\t    options.container.append(this.el.view);\n\t\n\t    this.mousePressed = false;\n\t    this.currentMousePos = {\n\t      clientX: 0,\n\t      clientY: 0\n\t    };\n\t  }\n\t\n\t  _createClass(GameView, [{\n\t    key: \"start\",\n\t    value: function start() {\n\t      this.board = new _Board2.default();\n\t      this.renderController = new _Renderer2.default({\n\t        renderer: this.el,\n\t        board: this.board\n\t      });\n\t\n\t      this.bindEvents();\n\t\n\t      _ticker2.default.add(this.update, this);\n\t      _ticker2.default.start();\n\t    }\n\t  }, {\n\t    key: \"bindEvents\",\n\t    value: function bindEvents() {\n\t      document.addEventListener('mousedown', this.mouseDown.bind(this));\n\t      document.addEventListener('mousemove', this.mouseMove.bind(this));\n\t      document.addEventListener('mouseup', this.mouseUp.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Touch Events\n\t     */\n\t\n\t  }, {\n\t    key: \"mouseDown\",\n\t    value: function mouseDown(e) {\n\t      if (this.board.hasChanged) return;\n\t\n\t      var hoverEl = this.getHoverEl(e);\n\t      if (!hoverEl) return;\n\t      if (!this.mouseInEl(e, hoverEl)) return;\n\t\n\t      this.board.activeEls.push(hoverEl);\n\t      this.mousePressed = true;\n\t\n\t      this.currentMousePos = e;\n\t    }\n\t  }, {\n\t    key: \"mouseMove\",\n\t    value: function mouseMove(e) {\n\t      if (!this.mousePressed || !this.board.activeEls.length || this.board.hasChanged) return;\n\t\n\t      this.currentMousePos = e;\n\t\n\t      var hoverEl = this.getHoverEl(this.currentMousePos);\n\t      if (!hoverEl) return;\n\t\n\t      if (this.mouseInEl(this.currentMousePos, hoverEl) && !this.board.loopCompleted) {\n\t\n\t        this.handleMouseInEl(hoverEl);\n\t      } else {\n\t        this.handleMouseOutEl(hoverEl);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"mouseUp\",\n\t    value: function mouseUp(e) {\n\t      if (this.board.hasChanged) return;\n\t\n\t      this.board.turn();\n\t      this.mousePressed = false;\n\t    }\n\t  }, {\n\t    key: \"getHoverEl\",\n\t    value: function getHoverEl(e) {\n\t      var x = e.clientX;\n\t      var y = e.clientY;\n\t\n\t      for (var i = 0; i < this.board.grid.elements.length; i++) {\n\t        var element = this.board.grid.elements[i];\n\t        var elRect = {\n\t          x: element.gridPos.x * this.board.elWidth,\n\t          y: element.gridPos.y * this.board.elHeight,\n\t          width: this.board.elWidth,\n\t          height: this.board.elHeight\n\t        };\n\t\n\t        if (_mathUtils2.default.pointInRect(x, y, elRect)) {\n\t          return element;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"mouseInEl\",\n\t    value: function mouseInEl(e, element) {\n\t      var x = e.clientX;\n\t      var y = e.clientY;\n\t      var circle = {\n\t        x: element.gridPos.x * this.board.elWidth + this.board.elWidth / 2,\n\t        y: element.gridPos.y * this.board.elHeight + this.board.elHeight / 2,\n\t        radius: this.board.maxElSize / 2\n\t      };\n\t\n\t      return _mathUtils2.default.circlePointCollision(x, y, circle);\n\t    }\n\t  }, {\n\t    key: \"handleMouseInEl\",\n\t    value: function handleMouseInEl(hoverEl) {\n\t      var currentEl = this.board.activeEls[this.board.activeEls.length - 1];\n\t      var neighbors = this.board.grid.getNeighbors(currentEl.gridPos);\n\t\n\t      // hoverEl is NOT in activeEls array but IS a neighbor of currentEl\n\t      // and is of the same type as is the same type as currentEl\n\t      if (hoverEl.dotType.id === currentEl.dotType.id && this.board.activeEls.indexOf(hoverEl) === -1 && neighbors.indexOf(hoverEl) !== -1) {\n\t\n\t        this.board.activeEls.push(hoverEl);\n\t      }\n\t\n\t      // loop is completed\n\t      else if (hoverEl.dotType.id === currentEl.dotType.id && this.board.activeEls.indexOf(hoverEl) === 0 && neighbors.indexOf(hoverEl) !== -1 && this.board.activeEls.length >= 4) {\n\t\n\t          this.board.activeEls.push(hoverEl);\n\t          this.board.loopCompleted = true;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * This method is kinda complicated. In short, it determines when to remove\n\t     * the last element of the activeEls array when the user is trying to. It could\n\t     * probably be simplified vastly but it seems to work for now.\n\t     *\n\t     * Note: if window.debug = true and you set window.rectBetweenRecents to\n\t     * the rectangle, it will be drawn in renderer.render().\n\t     *\n\t     * Steps:\n\t     * - get the most recent and the second most recent activeEls\n\t     * - get the grid vector pointing from the most recent to the second most recent\n\t     * - generate a rectangle to represent this vector in screen space and modify\n\t     * the x, y, width, & height such that it doesn't overlap too much with either element\n\t     * - do a hit / collision test to check if cursor is in this rectangle\n\t     * and if so remove / [].pop() the most recent activeEl\n\t     */\n\t\n\t  }, {\n\t    key: \"handleMouseOutEl\",\n\t    value: function handleMouseOutEl(hoverEl) {\n\t\n\t      // only try to move back if array length is 2 or more\n\t      if (this.board.activeEls.length < 2) return;\n\t\n\t      var mostRecentActiveEl = this.board.activeEls[this.board.activeEls.length - 1];\n\t\n\t      var secondMostRecentActiveEl = this.board.activeEls[this.board.activeEls.length - 2];\n\t\n\t      var vectToSecondMostRecent = secondMostRecentActiveEl.gridPos.subtract(mostRecentActiveEl.gridPos);\n\t\n\t      var rectBetweenRecents = {\n\t        width: vectToSecondMostRecent.x * this.board.elWidth,\n\t        height: vectToSecondMostRecent.y * this.board.elHeight\n\t      };\n\t\n\t      if (rectBetweenRecents.width !== 0) // horizontal collision rectangle\n\t        {\n\t          var shiftX = void 0;\n\t          if (rectBetweenRecents.width > 0) {\n\t            rectBetweenRecents.width -= this.board.maxElSize;\n\t            shiftX = this.board.maxElSize / 2;\n\t          } else {\n\t            rectBetweenRecents.width += this.board.maxElSize;\n\t            shiftX = -(this.board.maxElSize / 2);\n\t          }\n\t\n\t          rectBetweenRecents.height = this.board.maxElSize / 1.5;\n\t\n\t          rectBetweenRecents.y = mostRecentActiveEl.gridPos.y * this.board.elHeight + this.board.elHeight / 2 - rectBetweenRecents.height / 2;\n\t          rectBetweenRecents.x = mostRecentActiveEl.gridPos.x * this.board.elWidth + this.board.elWidth / 2 + shiftX;\n\t        } else // vertical collision rectangle\n\t        {\n\t          var shiftY = void 0;\n\t          if (rectBetweenRecents.height > 0) {\n\t            rectBetweenRecents.height -= this.board.maxElSize;\n\t            shiftY = this.board.maxElSize / 2;\n\t          } else {\n\t            rectBetweenRecents.height += this.board.maxElSize;\n\t            shiftY = -(this.board.maxElSize / 2);\n\t          }\n\t\n\t          rectBetweenRecents.width = this.board.maxElSize / 1.5;\n\t\n\t          rectBetweenRecents.y = mostRecentActiveEl.gridPos.y * this.board.elHeight + this.board.elHeight / 2 + shiftY;\n\t          rectBetweenRecents.x = mostRecentActiveEl.gridPos.x * this.board.elWidth + this.board.elWidth / 2 - rectBetweenRecents.width / 2;\n\t        }\n\t\n\t      if (_mathUtils2.default.pointInRect(this.currentMousePos.clientX, this.currentMousePos.clientY, rectBetweenRecents)) {\n\t\n\t        this.board.activeEls.pop();\n\t        if (this.board.loopCompleted) this.board.loopCompleted = false;\n\t      }\n\t\n\t      // window.rectBetweenRecents = rectBetweenRecents;\n\t    }\n\t\n\t    /**\n\t     * Main Update Loop\n\t     */\n\t\n\t  }, {\n\t    key: \"update\",\n\t    value: function update() {\n\t\n\t      if (window.debug && !this.board.hasChanged) {\n\t        (0, _animationTest2.default)(this.board);\n\t      }\n\t\n\t      this.renderController.update(this.board, this.currentMousePos);\n\t      this.renderController.renderer.render(this.renderController.stage);\n\t    }\n\t  }]);\n\t\n\t  return GameView;\n\t}();\n\t\n\tmodule.exports = GameView;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * LayoutManager is a singleton. Only one instance should be used per game\n\t */\n\t\n\tvar LayoutManager = function () {\n\t  function LayoutManager() {\n\t    _classCallCheck(this, LayoutManager);\n\t\n\t    this.width = window.innerWidth;\n\t    this.height = window.innerHeight;\n\t\n\t    this.bindEvents();\n\t  }\n\t\n\t  _createClass(LayoutManager, [{\n\t    key: 'bindEvents',\n\t    value: function bindEvents() {\n\t      var _this = this;\n\t\n\t      window.addEventListener('resize', function (e) {\n\t        _this.width = window.innerWidth;\n\t        _this.height = window.innerHeight;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return LayoutManager;\n\t}();\n\t\n\tvar layoutManager = new LayoutManager();\n\t\n\tmodule.exports = layoutManager;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Basic Math Utilities\n\t */\n\tvar utils = {\n\t\n\t  /**\n\t   * Normalize:\n\t   * Calculates a percent (btwn 0 and 1) that a value\n\t   * represents between a minimum and maximum value\n\t   *\n\t   * - Can handle when max is less than min\n\t   * - Can handle negative numbers\n\t   * - Can handle when val is greater or less than max / min\n\t   */\n\t  norm: function norm(val, min, max) {\n\t    return (val - min) / (max - min);\n\t  },\n\t\n\t  /**\n\t   * Lerp (Linear Interpolation):\n\t   * Takes a normalized number / percentage (between 0 and 1)\n\t   * and returns the value of it between a range of min and max\n\t   */\n\t  lerp: function lerp(norm, min, max) {\n\t    return (max - min) * norm + min;\n\t  },\n\t\n\t  /**\n\t   * Map:\n\t   * Converts a value in one range into\n\t   * the corresponding value in another range\n\t   */\n\t  map: function map(val, sourceMin, sourceMax, destMin, destMax) {\n\t    return this.lerp(this.norm(val, sourceMin, sourceMax), destMin, destMax);\n\t  },\n\t\n\t  /**\n\t   * Clamp:\n\t   * Forces value into range if it is\n\t   * greater than max or less than min\n\t   *\n\t   * - Achieved by calculating the maximum of val and min,\n\t   * then calculating the minimum of what was returned and max\n\t   * - Updated function uses second Math.min / Math.max calls\n\t   * so the function still works when min is greater than max\n\t   * (good for negative numbers, etc)\n\t   */\n\t  clamp: function clamp(val, min, max) {\n\t    // return Math.min(Math.max(val, min), max);\n\t    return Math.min(Math.max(val, Math.min(min, max)), Math.max(min, max));\n\t  },\n\t\n\t  /**\n\t   * Distance:\n\t   * Calculates distance between two x,y points by using\n\t   * Pythagoan Theorum to get the hypotenuse.\n\t   */\n\t  distance: function distance(x0, y0, x1, y1) {\n\t    var dx = x1 - x0;\n\t    var dy = y1 - y0;\n\t    return Math.sqrt(dx * dx + dy * dy);\n\t  },\n\t\n\t  /**\n\t   * Circle Collision:\n\t   * Given two circles, c0 and c1, calculates if distance between\n\t   * them is greater or less than the sum of their radii\n\t   */\n\t  circleCollision: function circleCollision(c0, c1) {\n\t    return this.distance(c0.x, c0.y, c1.x, c1.y) <= c0.radius + c1.radius;\n\t  },\n\t\n\t  /**\n\t   * Circle / Point Collision:\n\t   * Calculates if distance between point and circle is less than radius\n\t   */\n\t  circlePointCollision: function circlePointCollision(x, y, circle) {\n\t    return this.distance(circle.x, circle.y, x, y) <= circle.radius;\n\t  },\n\t\n\t  /**\n\t   * Point in Rectangle:\n\t   * Calculates if point is in a rectangle based on rectangle's\n\t   * x,y coords, width, and height\n\t   */\n\t  pointInRect: function pointInRect(x, y, rect) {\n\t    return this.inRange(x, rect.x, rect.x + rect.width) && this.inRange(y, rect.y, rect.y + rect.height);\n\t  },\n\t\n\t  /**\n\t   * In Range:\n\t   * Calcuates if value is between min and max\n\t   * - Using Math.min & Math.max, min can be larger\n\t   * than max and vice versa (useful for when width/height\n\t   * of a rectangle are negative values)\n\t   */\n\t  inRange: function inRange(val, min, max) {\n\t    return val >= Math.min(min, max) && val <= Math.max(min, max);\n\t  },\n\t\n\t  /**\n\t   * Range Intersect:\n\t   * Calculates if there is any overlap between two ranges\n\t   * - Useful for calculating if two rectangles are overlapping\n\t   * - Updated function wraps everything in Math.min / Math.max\n\t   * so that mins can be larger than maxes and vise versa\n\t   */\n\t  rangeIntersect: function rangeIntersect(min0, max0, min1, max1) {\n\t    // return max0 >= min1 && min0 <= max1;\n\t    return Math.max(min0, max0) >= Math.min(min1, max1) && Math.min(min0, max0) <= Math.max(min1, max1);\n\t  },\n\t\n\t  /**\n\t   * Rectangle Intersect\n\t   * Calculates if two rectangles intersect one another by\n\t   * comparing the ranges with rangeIntersect function\n\t   */\n\t  rectIntersect: function rectIntersect(r0, r1) {\n\t    return this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) && this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n\t  },\n\t\n\t  /**\n\t   * randomRange:\n\t   * Calculates a random number between given range\n\t   * - Works with negative numbers (ex: get random number btwn -10 and 10)\n\t   */\n\t  randomRange: function randomRange(min, max) {\n\t    return min + Math.random() * (max - min);\n\t  },\n\t\n\t  /**\n\t   * randomInt:\n\t   * Calculates a random integer between given range\n\t   */\n\t  randomInt: function randomInt(min, max) {\n\t    return Math.floor(min + Math.random() * (max - min + 1));\n\t  },\n\t\n\t  /**\n\t   * Random Distribution:\n\t   * Returns a weighted random number based on the number of\n\t   * iterations (the higher the iterations, the higher the\n\t   * chance that the number returned will be in the middle\n\t   * of the range).\n\t   */\n\t  randomDist: function randomDist(min, max, iterations) {\n\t    var total = 0;\n\t\n\t    for (var i = 0; i < iterations; i++) {\n\t      total += this.randomRange(min, max);\n\t    }\n\t\n\t    return total / iterations;\n\t  },\n\t\n\t  roundToPlaces: function roundToPlaces(value, places) {\n\t    var mult = Math.pow(10, places);\n\t    return Math.round(value * mult) / mult;\n\t  },\n\t\n\t  roundNearest: function roundNearest(value, nearest) {\n\t    return Math.round(value / nearest) * nearest;\n\t  },\n\t\n\t  /**\n\t   * Degrees to Radians:\n\t   * Calculates radians from degrees\n\t   */\n\t  degreesToRads: function degreesToRads(degrees) {\n\t    return degrees / 180 * Math.PI;\n\t  },\n\t\n\t  /**\n\t   * Radians to Degrees:\n\t   * Calculates degrees from radians\n\t   */\n\t  radsToDegrees: function radsToDegrees(radians) {\n\t    return radians * 180 / Math.PI;\n\t  },\n\t\n\t  /**\n\t   * RotateTo:\n\t   * Takes a point in space and rotates it by\n\t   * an angle around space's center (0,0) coord.\n\t   *\n\t   * - You could rotate it around a different\n\t   * point by modifying point's (x,y) to reflect\n\t   * a different center coordinate.\n\t   */\n\t  rotateTo: function rotateTo(p0, angle) {\n\t    var cos = Math.cos(angle);\n\t    var sin = Math.sin(angle);\n\t\n\t    var p1 = {\n\t      x: p0.x * cos - p0.y * sin,\n\t      y: p0.y * cos + p0.x * sin\n\t    };\n\t    return p1;\n\t  },\n\t\n\t\n\t  /**\n\t   * Quadratic Bezier Curve:\n\t   * Two end points and one control point inbetween.\n\t   * Standard function for computing quadratic\n\t   * bezier curves. Basically just a super simplified\n\t   * combination of linear interpolations\n\t   */\n\t  quadraticBezier: function quadraticBezier(p0, p1, p2, t, pFinal) {\n\t    pFinal = pFinal || {};\n\t    pFinal.x = Math.pow(1 - t, 2) * p0.x + (1 - t) * 2 * t * p1.x + t * t * p2.x;\n\t    pFinal.y = Math.pow(1 - t, 2) * p0.y + (1 - t) * 2 * t * p1.y + t * t * p2.y;\n\t    return pFinal;\n\t  },\n\t\n\t  /**\n\t   * Cubic Bezier Curve:\n\t   * Two end points and two control point inbetween.\n\t   */\n\t  cubicBezier: function cubicBezier(p0, p1, p2, p3, t, pFinal) {\n\t    pFinal = pFinal || {};\n\t    pFinal.x = Math.pow(1 - t, 3) * p0.x + Math.pow(1 - t, 2) * 3 * t * p1.x + (1 - t) * 3 * t * t * p2.x + t * t * t * p3.x;\n\t    pFinal.y = Math.pow(1 - t, 3) * p0.y + Math.pow(1 - t, 2) * 3 * t * p1.y + (1 - t) * 3 * t * t * p2.y + t * t * t * p3.y;\n\t    return pFinal;\n\t  },\n\t\n\t  /**\n\t   * Multi Curve Draw:\n\t   * Draws a series of connected quadratic curves. Gives\n\t   * the illusion of being a bezier curve with many mid-points\n\t   * but not actually 100% accurate. Often good enough though.\n\t   */\n\t  multicurve: function multicurve(points, context) {\n\t    var p0, p1, midx, midy;\n\t\n\t    context.moveTo(points[0].x, points[0].y);\n\t\n\t    for (var i = 1; i < points.length - 2; i += 1) {\n\t      p0 = points[i];\n\t      p1 = points[i + 1];\n\t      midx = (p0.x + p1.x) / 2;\n\t      midy = (p0.y + p1.y) / 2;\n\t      context.quadraticCurveTo(p0.x, p0.y, midx, midy);\n\t    }\n\t    p0 = points[points.length - 2];\n\t    p1 = points[points.length - 1];\n\t    context.quadraticCurveTo(p0.x, p0.y, p1.x, p1.y);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = utils;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _layoutManager = __webpack_require__(7);\n\t\n\tvar _layoutManager2 = _interopRequireDefault(_layoutManager);\n\t\n\tvar _Vector = __webpack_require__(10);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _Grid = __webpack_require__(11);\n\t\n\tvar _Grid2 = _interopRequireDefault(_Grid);\n\t\n\tvar _Dot = __webpack_require__(12);\n\t\n\tvar _Dot2 = _interopRequireDefault(_Dot);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Board = function () {\n\t  function Board(options) {\n\t    _classCallCheck(this, Board);\n\t\n\t    if (!options) options = {};\n\t    options.width = options.width || 16;\n\t    options.height = options.height || 8;\n\t\n\t    this.grid = new _Grid2.default({\n\t      width: options.width,\n\t      height: options.height\n\t    });\n\t\n\t    // calculate element dimensions\n\t    this.elWidth = _layoutManager2.default.width / this.grid.width;\n\t    this.elHeight = _layoutManager2.default.height / this.grid.height;\n\t    this.maxElSize = Math.min(this.elWidth, this.elHeight) / 2;\n\t\n\t    // populate grid's elements array\n\t    for (var i = 0; i < this.grid.height; i++) {\n\t      for (var j = 0; j < this.grid.width; j++) {\n\t        var newDot = new _Dot2.default({\n\t          x: j,\n\t          y: i\n\t        });\n\t        this.grid.setElement(new _Vector2.default(j, i), newDot);\n\t      }\n\t    }\n\t\n\t    this.hasChanged = false; // DO NOT SET THIS VALUE DIRECTLY\n\t\n\t    this.cloned = null;\n\t\n\t    this.activeEls = [];\n\t    this.loopCompleted = false;\n\t  }\n\t\n\t  /**\n\t   * used to set hasChanged var\n\t   *\n\t   * - hasChanged should only be set to \"true\"\n\t   * at the end of the \"turn\" function\n\t   * - hasChanged should only be set to \"false\"\n\t   * by the renderer once all relevant turn animations are done\n\t   */\n\t\n\t\n\t  _createClass(Board, [{\n\t    key: \"setChanged\",\n\t    value: function setChanged(bool) {\n\t      this.hasChanged = bool;\n\t\n\t      if (!bool) {\n\t        this.activeEls = [];\n\t        this.loopCompleted = false;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Turn / Update Methods\n\t     */\n\t\n\t  }, {\n\t    key: \"turn\",\n\t    value: function turn() {\n\t      if (this.activeEls.length < 2) {\n\t        this.setChanged(false);\n\t        return;\n\t      }\n\t\n\t      this.startTurn();\n\t\n\t      this.removeActiveElsFromGrid();\n\t\n\t      this.addPreviousPositions();\n\t\n\t      this.shiftElsDown();\n\t\n\t      this.createNewEls();\n\t\n\t      this.finishTurn();\n\t    }\n\t  }, {\n\t    key: \"startTurn\",\n\t    value: function startTurn() {\n\t\n\t      // if loop is complete, change activeEls to be array including\n\t      // every single element of activeEls type / id / color.\n\t      // ALSO: need to pop lasts element of activeEls array\n\t      // because it is a repeat of the last.\n\t      if (this.loopCompleted) {\n\t        this.activeEls.pop();\n\t        var typeId = this.activeEls[0].dotType.id;\n\t        for (var i = 0; i < this.grid.elements.length; i++) {\n\t          var element = this.grid.elements[i];\n\t          if (element.dotType.id === typeId && this.activeEls.indexOf(element) === -1) {\n\t\n\t            this.activeEls.push(element);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"removeActiveElsFromGrid\",\n\t    value: function removeActiveElsFromGrid() {\n\t      // remove activeEls from grid\n\t      for (var i = 0; i < this.grid.elements.length; i++) {\n\t        var element = this.grid.elements[i];\n\t\n\t        if (this.activeEls.indexOf(element) !== -1) {\n\t          this.grid.setElement(element.gridPos, null);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * adds property to each grid element with a reference\n\t     * to its previous position for use when animating\n\t     */\n\t\n\t  }, {\n\t    key: \"addPreviousPositions\",\n\t    value: function addPreviousPositions() {\n\t      for (var i = 0; i < this.grid.elements.length; i++) {\n\t        var element = this.grid.elements[i];\n\t        if (!element) continue;\n\t\n\t        element.previousGridPos = new _Vector2.default(element.gridPos.x, element.gridPos.y);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"shiftElsDown\",\n\t    value: function shiftElsDown() {\n\t      // sort activeEls so that lowest y's are first in arr\n\t      // (not doing this results in errors while shifting stuff down)\n\t      this.activeEls.sort(function (a, b) {\n\t        return a.gridPos.y - b.gridPos.y;\n\t      });\n\t\n\t      // shift everything down\n\t      for (var i = 0; i < this.activeEls.length; i++) {\n\t        var element = this.activeEls[i];\n\t\n\t        var posVect = element.gridPos;\n\t        var y = posVect.y - 1;\n\t        var x = posVect.x;\n\t        while (y >= 0) {\n\t\n\t          var elAbove = this.grid.getElement(new _Vector2.default(x, y));\n\t\n\t          this.grid.setElement(new _Vector2.default(x, y + 1), elAbove);\n\t          this.grid.setElement(new _Vector2.default(x, y), null);\n\t\n\t          y--;\n\t        }\n\t      }\n\t\n\t      // if element exists in position, correct it's gridPos.\n\t      for (var _i = 0; _i < this.grid.height; _i++) {\n\t        for (var j = 0; j < this.grid.width; j++) {\n\t          var gridPos = new _Vector2.default(j, _i);\n\t\n\t          var _element = this.grid.getElement(gridPos);\n\t          if (_element) {\n\t            _element.gridPos = gridPos;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"createNewEls\",\n\t    value: function createNewEls() {\n\t      for (var i = 0; i < this.grid.height; i++) {\n\t        for (var j = 0; j < this.grid.width; j++) {\n\t          var gridPos = new _Vector2.default(j, i);\n\t\n\t          var element = this.grid.getElement(gridPos);\n\t          if (!element) {\n\t            var newDot = new _Dot2.default(gridPos);\n\t            this.grid.setElement(gridPos, newDot);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"finishTurn\",\n\t    value: function finishTurn() {\n\t      this.setChanged(true);\n\t    }\n\t  }]);\n\t\n\t  return Board;\n\t}();\n\t\n\tmodule.exports = Board;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Vector = function () {\n\t  function Vector(x, y) {\n\t    _classCallCheck(this, Vector);\n\t\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  // should ONLY use this when manipulating grid vectors\n\t\n\t\n\t  _createClass(Vector, [{\n\t    key: \"add\",\n\t    value: function add(vector) {\n\t      return new Vector(this.x + vector.x, this.y + vector.y);\n\t    }\n\t  }, {\n\t    key: \"subtract\",\n\t    value: function subtract(vector) {\n\t      return new Vector(this.x - vector.x, this.y - vector.y);\n\t    }\n\t  }, {\n\t    key: \"multiply\",\n\t    value: function multiply(val) {\n\t      return new Vector(this.x * val, this.y * val);\n\t    }\n\t  }]);\n\t\n\t  return Vector;\n\t}();\n\t\n\tmodule.exports = Vector;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Vector = __webpack_require__(10);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NEIGHBORS = [new _Vector2.default(0, -1), // NORTH\n\tnew _Vector2.default(1, 0), // EAST\n\tnew _Vector2.default(0, 1), // SOUTH\n\tnew _Vector2.default(-1, 0) // WEST\n\t];\n\t\n\tvar Grid = function () {\n\t  function Grid(options) {\n\t    _classCallCheck(this, Grid);\n\t\n\t    this.width = options.width;\n\t    this.height = options.height;\n\t\n\t    // create elements array\n\t    this.elements = new Array(this.width * this.height);\n\t  }\n\t\n\t  /**\n\t   * Element Vector methods\n\t   */\n\t\n\t\n\t  _createClass(Grid, [{\n\t    key: \"getElement\",\n\t    value: function getElement(vector) {\n\t      return this.elements[vector.y * this.width + vector.x];\n\t    }\n\t  }, {\n\t    key: \"setElement\",\n\t    value: function setElement(vector, el) {\n\t      this.elements[vector.y * this.width + vector.x] = el;\n\t    }\n\t  }, {\n\t    key: \"getNeighbors\",\n\t    value: function getNeighbors(vector) {\n\t      var neighbors = [];\n\t      for (var i = 0; i < NEIGHBORS.length; i++) {\n\t        neighbors.push(this.getElement(vector.add(NEIGHBORS[i])));\n\t      }\n\t\n\t      return neighbors;\n\t    }\n\t  }]);\n\t\n\t  return Grid;\n\t}();\n\t\n\tmodule.exports = Grid;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _mathUtils = __webpack_require__(8);\n\t\n\tvar _mathUtils2 = _interopRequireDefault(_mathUtils);\n\t\n\tvar _Vector = __webpack_require__(10);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DOTTYPES = [{\n\t  id: 1,\n\t  name: 'red',\n\t  color: 0xf15c3b\n\t},\n\t// {\n\t//   id: 2,\n\t//   name: 'yellow',\n\t//   color: 0xe7dd00\n\t// },\n\t{\n\t  id: 3,\n\t  name: 'green',\n\t  color: 0x89ed90\n\t}, {\n\t  id: 4,\n\t  name: 'blue',\n\t  color: 0x8abdff\n\t}, {\n\t  id: 5,\n\t  name: 'purple',\n\t  color: 0x9d5ab7\n\t}];\n\t\n\tvar Dot = function Dot(options) {\n\t  _classCallCheck(this, Dot);\n\t\n\t  this.gridPos = new _Vector2.default(options.x, options.y);\n\t  this.dotType = DOTTYPES[_mathUtils2.default.randomInt(0, DOTTYPES.length - 1)];\n\t};\n\t\n\tmodule.exports = Dot;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Dot = __webpack_require__(14);\n\t\n\tvar _Dot2 = _interopRequireDefault(_Dot);\n\t\n\tvar _turnAnimations = __webpack_require__(15);\n\t\n\tvar turnAnimations = _interopRequireWildcard(_turnAnimations);\n\t\n\tvar _tweens = __webpack_require__(16);\n\t\n\tvar tweens = _interopRequireWildcard(_tweens);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Renderer = function () {\n\t  function Renderer(options) {\n\t    _classCallCheck(this, Renderer);\n\t\n\t    this.renderer = options.renderer;\n\t    this.stage = new PIXI.Container();\n\t\n\t    this.activeElConnections = new PIXI.Graphics();\n\t    this.stage.addChild(this.activeElConnections);\n\t\n\t    this.staticStateEls = new PIXI.Container(); // this is used when turn animations aren't happening\n\t    this.stage.addChild(this.staticStateEls);\n\t\n\t    this.prepareStaticData(options.board);\n\t    this.resetRendererState();\n\t  }\n\t\n\t  _createClass(Renderer, [{\n\t    key: \"resetRendererState\",\n\t    value: function resetRendererState() {\n\t      this.isAnimatingTurn = false;\n\t\n\t      if (this.stage.children.indexOf(this.activeEls) !== -1) {\n\t        this.stage.removeChild(this.activeEls);\n\t        this.activeEls.destroy(true);\n\t      }\n\t      this.activeEls = new PIXI.Container();\n\t      this.stage.addChild(this.activeEls);\n\t\n\t      if (this.stage.children.indexOf(this.shiftingEls) !== -1) {\n\t        this.stage.removeChild(this.shiftingEls);\n\t        this.shiftingEls.destroy(true);\n\t      }\n\t      this.shiftingEls = new PIXI.Container();\n\t      this.stage.addChild(this.shiftingEls);\n\t\n\t      if (this.stage.children.indexOf(this.nonShiftingEls) !== -1) {\n\t        this.stage.removeChild(this.nonShiftingEls);\n\t        this.nonShiftingEls.destroy(true);\n\t      }\n\t      this.nonShiftingEls = new PIXI.Container();\n\t      this.stage.addChild(this.nonShiftingEls);\n\t\n\t      if (this.stage.children.indexOf(this.newEls) !== -1) {\n\t        this.stage.removeChild(this.newEls);\n\t        this.newEls.destroy(true);\n\t      }\n\t      this.newEls = new PIXI.Container();\n\t      this.stage.addChild(this.newEls);\n\t\n\t      this.turnAnimationSteps = [];\n\t      this.usePrevPosForShiftingEls = false;\n\t      this.canShowNew = false;\n\t    }\n\t\n\t    /**\n\t     * Prepares array of data required to render board in static state\n\t     */\n\t\n\t  }, {\n\t    key: \"prepareStaticData\",\n\t    value: function prepareStaticData(board) {\n\t\n\t      if (board) // should only run when game starts\n\t        {\n\t          for (var i = 0; i < board.grid.elements.length; i++) {\n\t            var element = board.grid.elements[i];\n\t\n\t            var dot = new _Dot2.default({\n\t              currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n\t              currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n\t              dotType: element.dotType,\n\t              radius: board.maxElSize / 2,\n\t              loopedRadius: board.maxElSize / 2,\n\t              maxLoopedRadius: board.maxElSize / 1.5,\n\t              loopedAlpha: 0.5\n\t            });\n\t            this.staticStateEls.addChild(dot);\n\t          }\n\t        } else // this should run whenever a turn is over and animations are done\n\t        {\n\t\n\t          this.staticStateEls.removeChildren();\n\t\n\t          for (var _i = this.shiftingEls.children.length - 1; _i >= 0; _i--) {\n\t            var _element = this.shiftingEls.removeChildAt(_i);\n\t            this.staticStateEls.addChild(_element);\n\t            if (_element.tween) _element.tween = null;\n\t          }\n\t          for (var _i2 = this.nonShiftingEls.children.length - 1; _i2 >= 0; _i2--) {\n\t            var _element2 = this.nonShiftingEls.removeChildAt(_i2);\n\t            this.staticStateEls.addChild(_element2);\n\t            if (_element2.tween) _element2.tween = null;\n\t          }\n\t          for (var _i3 = this.newEls.children.length - 1; _i3 >= 0; _i3--) {\n\t            var _element3 = this.newEls.removeChildAt(_i3);\n\t            this.staticStateEls.addChild(_element3);\n\t            if (_element3.tween) _element3.tween = null;\n\t          }\n\t\n\t          // MUST GET RID OF ACTIVE ELEMENTS\n\t          for (var _i4 = this.activeEls.children.length - 1; _i4 >= 0; _i4--) {\n\t            var _element4 = this.activeEls.children[_i4];\n\t            this.activeEls.removeChild(_element4);\n\t            _element4.remove();\n\t            _element4.destroy(true);\n\t          }\n\t\n\t          this.activeElConnections.clear();\n\t          this.activeElConnections.alpha = 1;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Prepares arrays of data required for turn animations to complete\n\t     */\n\t\n\t  }, {\n\t    key: \"prepareTurnAnimationData\",\n\t    value: function prepareTurnAnimationData(board) {\n\t      this.isAnimatingTurn = true;\n\t\n\t      this.staticStateEls.removeChildren();\n\t\n\t      for (var i = 0; i < board.activeEls.length; i++) {\n\t        var element = board.activeEls[i];\n\t\n\t        var dot = new _Dot2.default({\n\t          currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n\t          currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n\t          dotType: element.dotType,\n\t          radius: board.maxElSize / 2,\n\t          loopedRadius: board.loopCompleted ? board.maxElSize / 1.5 : board.maxElSize / 2,\n\t          maxLoopedRadius: board.maxElSize / 1.5,\n\t          loopedAlpha: 0.5,\n\t          loopCompleted: board.loopCompleted\n\t        });\n\t        this.activeEls.addChild(dot);\n\t      }\n\t\n\t      for (var _i5 = 0; _i5 < board.grid.elements.length; _i5++) {\n\t        var _element5 = board.grid.elements[_i5];\n\t\n\t        // elements that are changing position\n\t        if (_element5.previousGridPos && (_element5.previousGridPos.x !== _element5.gridPos.x || _element5.previousGridPos.y !== _element5.gridPos.y)) {\n\t\n\t          var _dot = new _Dot2.default({\n\t            currentX: _element5.gridPos.x * board.elWidth + board.elWidth / 2,\n\t            currentY: _element5.gridPos.y * board.elHeight + board.elHeight / 2,\n\t            prevX: _element5.previousGridPos.x * board.elWidth + board.elWidth / 2,\n\t            prevY: _element5.previousGridPos.y * board.elHeight + board.elHeight / 2,\n\t            dotType: _element5.dotType,\n\t            radius: board.maxElSize / 2,\n\t            loopedRadius: board.maxElSize / 2,\n\t            maxLoopedRadius: board.maxElSize / 1.5,\n\t            loopedAlpha: 0.5\n\t          });\n\t          this.shiftingEls.addChild(_dot);\n\t        }\n\t\n\t        // new elements\n\t        else if (!_element5.previousGridPos) {\n\t\n\t            var _dot2 = new _Dot2.default({\n\t              currentX: _element5.gridPos.x * board.elWidth + board.elWidth / 2,\n\t              currentY: _element5.gridPos.y * board.elHeight + board.elHeight / 2,\n\t              prevX: _element5.gridPos.x * board.elWidth + board.elWidth / 2,\n\t              prevY: -100,\n\t              dotType: _element5.dotType,\n\t              radius: 0,\n\t              destRadius: board.maxElSize / 2,\n\t              loopedRadius: 0,\n\t              maxLoopedRadius: board.maxElSize / 1.5,\n\t              loopedAlpha: 0.5\n\t            });\n\t            this.newEls.addChild(_dot2);\n\t          }\n\t\n\t          // elements that are not changing position\n\t          else {\n\t\n\t              var _dot3 = new _Dot2.default({\n\t                currentX: _element5.gridPos.x * board.elWidth + board.elWidth / 2,\n\t                currentY: _element5.gridPos.y * board.elHeight + board.elHeight / 2,\n\t                dotType: _element5.dotType,\n\t                radius: board.maxElSize / 2,\n\t                loopedRadius: board.maxElSize / 2,\n\t                maxLoopedRadius: board.maxElSize / 1.5,\n\t                loopedAlpha: 0.5\n\t              });\n\t              this.nonShiftingEls.addChild(_dot3);\n\t            }\n\t      }\n\t\n\t      this.usePrevPosForShiftingEls = true;\n\t      this.canShowNew = false;\n\t\n\t      // this.turnAnimationSteps.push(turnAnimations.waitForFrames(this, 50));\n\t      this.turnAnimationSteps.push(turnAnimations.hideActiveElConnection(this));\n\t      this.turnAnimationSteps.push(turnAnimations.shrinkActive(this));\n\t      this.turnAnimationSteps.push(turnAnimations.shiftDown(this));\n\t      this.turnAnimationSteps.push(turnAnimations.populateNew(this));\n\t    }\n\t\n\t    /**\n\t     * Main Render function\n\t     * TODO: add comments and optimize\n\t     */\n\t\n\t  }, {\n\t    key: \"update\",\n\t    value: function update(board, currentMousePos) {\n\t      var _this = this;\n\t\n\t      if (board.hasChanged && !this.isAnimatingTurn) {\n\t        this.prepareTurnAnimationData(board);\n\t      }\n\t\n\t      if (this.isAnimatingTurn) {\n\t        if (this.turnAnimationSteps.length > 0) {\n\t          this.turnAnimationSteps[0](board, currentMousePos);\n\t        }\n\t\n\t        this.drawTurnAnimationBoard(board);\n\t\n\t        if (this.turnAnimationSteps.length === 0) {\n\t          this.prepareStaticData();\n\t          this.resetRendererState();\n\t          board.setChanged(false);\n\t        }\n\t      } else {\n\t\n\t        this.drawActiveElConnections(board, currentMousePos);\n\t\n\t        var _loop = function _loop(i) {\n\t          var element = _this.staticStateEls.children[i];\n\t\n\t          if (element) {\n\t\n\t            // increases / decreases size of loopedRadius\n\t            if (board.loopCompleted && board.activeEls[0].dotType === element.dotType && element.loopedRadius < element.maxLoopedRadius && !element.tween) {\n\t\n\t              element.tween = tweens.getNewTween(element, {\n\t                loopedRadius: element.maxLoopedRadius\n\t              }, 300, tweens.easeInOutQuad, null, function () {\n\t                element.tween = null;\n\t              });\n\t            } else if (!board.loopCompleted && element.loopedRadius > element.radius && !element.tween) {\n\t\n\t              element.tween = tweens.getNewTween(element, {\n\t                loopedRadius: element.radius\n\t              }, 300, tweens.easeInOutQuad, null, function () {\n\t                element.tween = null;\n\t              });\n\t            }\n\t            if (element.tween) element.tween();\n\t            element.update(false);\n\t          }\n\t        };\n\t\n\t        for (var i = 0; i < this.staticStateEls.children.length; i++) {\n\t          _loop(i);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"drawTurnAnimationBoard\",\n\t    value: function drawTurnAnimationBoard(board) {\n\t      var i = void 0;\n\t      var element = void 0;\n\t\n\t      if (this.activeEls.children.length > 0) {\n\t        for (i = 0; i < this.activeEls.children.length; i++) {\n\t          element = this.activeEls.children[i];\n\t          element.update(false);\n\t        }\n\t      }\n\t\n\t      for (i = 0; i < this.shiftingEls.children.length; i++) {\n\t        element = this.shiftingEls.children[i];\n\t        element.update(this.usePrevPosForShiftingEls);\n\t      }\n\t      for (i = 0; i < this.nonShiftingEls.children.length; i++) {\n\t        element = this.nonShiftingEls.children[i];\n\t        element.update(false);\n\t      }\n\t\n\t      if (this.canShowNew) {\n\t        for (i = 0; i < this.newEls.children.length; i++) {\n\t          element = this.newEls.children[i];\n\t          element.update(false);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"drawElement\",\n\t    value: function drawElement(board, element, usePreviousPos) {\n\t\n\t      if (element.radius < 0) return;\n\t\n\t      this.context.fillStyle = element.dotType.color;\n\t\n\t      var x = usePreviousPos ? element.prevX : element.currentX;\n\t      var y = usePreviousPos ? element.prevY : element.currentY;\n\t\n\t      if (element.loopedRadius > element.radius) {\n\t\n\t        this.context.globalAlpha = element.loopedAlpha;\n\t        this.context.beginPath();\n\t        this.context.arc(x, y, element.loopedRadius, 0, Math.PI * 2, false);\n\t        this.context.fill();\n\t        this.context.globalAlpha = 1;\n\t      }\n\t\n\t      this.context.beginPath();\n\t      this.context.arc(x, y, element.radius, 0, Math.PI * 2, false);\n\t      this.context.fill();\n\t    }\n\t  }, {\n\t    key: \"drawActiveElConnections\",\n\t    value: function drawActiveElConnections(board, currentMousePos) {\n\t      this.activeElConnections.clear();\n\t\n\t      if (board.activeEls.length < 1) return;\n\t\n\t      this.activeElConnections.lineStyle(board.maxElSize / 4, 0x333333);\n\t\n\t      if (board.activeEls.length > 1) {\n\t        for (var i = 1; i < board.activeEls.length; i++) {\n\t          var prevEl = board.activeEls[i - 1];\n\t          this.activeElConnections.moveTo(prevEl.gridPos.x * board.elWidth + board.elWidth / 2, prevEl.gridPos.y * board.elHeight + board.elHeight / 2);\n\t\n\t          var currentEl = board.activeEls[i];\n\t          this.activeElConnections.lineTo(currentEl.gridPos.x * board.elWidth + board.elWidth / 2, currentEl.gridPos.y * board.elHeight + board.elHeight / 2);\n\t        }\n\t      }\n\t\n\t      var lastEl = board.activeEls[board.activeEls.length - 1];\n\t      this.activeElConnections.moveTo(lastEl.gridPos.x * board.elWidth + board.elWidth / 2, lastEl.gridPos.y * board.elHeight + board.elHeight / 2);\n\t\n\t      if (board.loopCompleted) {\n\t        var firstEl = board.activeEls[0];\n\t        this.activeElConnections.lineTo(firstEl.gridPos.x * board.elWidth + board.elWidth / 2, firstEl.gridPos.y * board.elHeight + board.elHeight / 2);\n\t      } else {\n\t        this.activeElConnections.lineTo(currentMousePos.clientX, currentMousePos.clientY);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Renderer;\n\t}();\n\t\n\tmodule.exports = Renderer;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Dot = function (_PIXI$Container) {\n\t  _inherits(Dot, _PIXI$Container);\n\t\n\t  function Dot(options) {\n\t    _classCallCheck(this, Dot);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dot).call(this));\n\t\n\t    _this.currentX = options.currentX;\n\t    _this.currentY = options.currentY;\n\t    _this.prevX = options.prevX;\n\t    _this.prevY = options.prevY;\n\t    _this.dotType = options.dotType;\n\t    _this.radius = Math.floor(options.radius);\n\t    _this.destRadius = options.destRadius ? Math.floor(options.destRadius) : null;\n\t    _this.loopedRadius = Math.floor(options.loopedRadius);\n\t    _this.maxLoopedRadius = Math.floor(options.maxLoopedRadius);\n\t    _this.loopedAlpha = options.loopedAlpha;\n\t    _this.loopCompleted = options.loopCompleted;\n\t\n\t    _this.createChildren();\n\t    _this.update(false);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Dot, [{\n\t    key: 'createChildren',\n\t    value: function createChildren() {\n\t      var loop = circleSpriteGenerator.createNewCircle(this.loopedRadius, this.maxLoopedRadius, this.dotType.color, this.loopedAlpha, false);\n\t\n\t      // in new elements, the initial radius is set as 0 and the element is given\n\t      // an additional parameter, 'destRadius' containing the element's final radius\n\t      // once it has grown / been populated. this is needed because the\n\t      // 'baseRadius' argument in a Circle's constructor is used to draw a\n\t      // bitmap of that size, and if it's value is 0, no matter how much you\n\t      // increase the scale / grow it, it won't show up.\n\t      var mainBaseRadius = typeof this.destRadius === 'number' ? this.destRadius : this.radius;\n\t\n\t      // let main = new Circle(0, 0, this.radius, mainBaseRadius,\n\t      //   this.dotType.color, 1);\n\t      var main = circleSpriteGenerator.createNewCircle(this.radius, mainBaseRadius, this.dotType.color, 1, true);\n\t\n\t      this.addChild(loop);\n\t      this.addChild(main);\n\t    }\n\t  }, {\n\t    key: 'update',\n\t    value: function update(usePreviousPosition) {\n\t      var x = usePreviousPosition ? this.prevX : this.currentX;\n\t      var y = usePreviousPosition ? this.prevY : this.currentY;\n\t\n\t      if (this.position.x !== x || this.position.y !== y) {\n\t        this.position.x = x;\n\t        this.position.y = y;\n\t      }\n\t\n\t      // redraw looped circle\n\t      if (this.children[0].currentRadius !== this.loopedRadius || this.children[0].alpha !== this.loopedAlpha) {\n\t\n\t        this.children[0].update(this.loopedRadius, this.loopedAlpha);\n\t      }\n\t\n\t      // redraw main circle\n\t      if (this.children[1].currentRadius !== this.radius) {\n\t        this.children[1].update(this.radius, 1);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove() {\n\t      for (var i = this.children.length - 1; i >= 0; i--) {\n\t        var element = this.children[i];\n\t\n\t        element.destroy();\n\t        this.removeChild(element);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Dot;\n\t}(PIXI.Container);\n\t\n\tvar Circle = function (_PIXI$Sprite) {\n\t  _inherits(Circle, _PIXI$Sprite);\n\t\n\t  function Circle(texture, currentRadius, baseRadius, color, alpha) {\n\t    _classCallCheck(this, Circle);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Circle).call(this, texture));\n\t\n\t    _this2.anchor.x = 0.5;\n\t    _this2.anchor.y = 0.5;\n\t\n\t    _this2.baseRadius = baseRadius;\n\t    _this2.currentRadius = currentRadius;\n\t    _this2.color = color;\n\t    _this2.alpha = alpha;\n\t\n\t    // this.lineStyle(0);\n\t    // this.beginFill(color, this.alpha);\n\t    // // this.drawCircle(x, y, radius);\n\t    // this.drawEllipse(0, 0, this.baseRadius, this.baseRadius);\n\t    // this.endFill();\n\t\n\t    _this2.update(_this2.currentRadius, alpha);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(Circle, [{\n\t    key: 'update',\n\t    value: function update(radius, alpha) {\n\t      this.currentRadius = radius;\n\t\n\t      this.alpha = alpha;\n\t      this.scale.x = this.currentRadius / this.baseRadius;\n\t      this.scale.y = this.currentRadius / this.baseRadius;\n\t    }\n\t  }]);\n\t\n\t  return Circle;\n\t}(PIXI.Sprite);\n\t\n\t// There was an error being thrown\n\t// when destroying PIXI.Graphics elements that used\n\t// a drawCircle method were being removed / destroyed\n\t// in Chrome (not Firefox). Seems like drawEllipse works though\n\t\n\t\n\tvar CircleSpriteGenerator = function () {\n\t  function CircleSpriteGenerator() {\n\t    _classCallCheck(this, CircleSpriteGenerator);\n\t\n\t    this.graphics = new PIXI.Graphics();\n\t\n\t    this.loopCircleTextures = {};\n\t    this.circleTextures = {};\n\t  }\n\t\n\t  _createClass(CircleSpriteGenerator, [{\n\t    key: 'createNewCircle',\n\t    value: function createNewCircle(currentRadius, baseRadius, color, alpha, isMain) {\n\t      var texture = void 0;\n\t\n\t      var cache = isMain ? 'circleTextures' : 'loopCircleTextures';\n\t\n\t      if (this[cache].hasOwnProperty(color.toString())) {\n\t        texture = this[cache][color.toString()];\n\t      } else {\n\t        // this.graphics.width = baseRadius * 2;\n\t        // this.graphics.height = baseRadius * 2;\n\t        this.graphics.lineStyle();\n\t        this.graphics.beginFill(color, 1);\n\t        this.graphics.drawEllipse(baseRadius, baseRadius, baseRadius, baseRadius);\n\t\n\t        texture = this.graphics.generateTexture();\n\t        this[cache][color.toString()] = texture;\n\t\n\t        this.graphics.clear();\n\t      }\n\t\n\t      var sprite = new Circle(texture, currentRadius, baseRadius, currentRadius, alpha);\n\t\n\t      return sprite;\n\t    }\n\t  }]);\n\t\n\t  return CircleSpriteGenerator;\n\t}();\n\t\n\tvar circleSpriteGenerator = new CircleSpriteGenerator();\n\t\n\texports.default = Dot;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.waitForFrames = waitForFrames;\n\texports.hideActiveElConnection = hideActiveElConnection;\n\texports.shrinkActive = shrinkActive;\n\texports.shiftDown = shiftDown;\n\texports.populateNew = populateNew;\n\t\n\tvar _tweens = __webpack_require__(16);\n\t\n\tvar tweens = _interopRequireWildcard(_tweens);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// returns a function that has access to the number of frames\n\t// to wait (in a closure) and counts down to that. it shifts itself\n\t// off of turnAnimationSteps array once the value is 0 or less\n\tfunction waitForFrames(renderer, frames) {\n\t  return function () {\n\t    frames--;\n\t\n\t    if (frames < 0) {\n\t      renderer.turnAnimationSteps.shift();\n\t    }\n\t  };\n\t}\n\t\n\t// hides activeElConnections lines\n\t/**\n\t * These functions represent the steps each turn animation in the Renderer\n\t */\n\t\n\tfunction hideActiveElConnection(renderer) {\n\t  var tweenLength = 100; // in ms\n\t\n\t  var state = {\n\t    hideCompleted: true\n\t  };\n\t\n\t  var tween = void 0;\n\t\n\t  return function () {\n\t    if (!renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = true;\n\t\n\t    state.hideCompleted = true;\n\t\n\t    if (!tween) {\n\t      tween = tweens.getNewTween(renderer.activeElConnections, {\n\t        alpha: 0\n\t      }, tweenLength, tweens.easeInOutQuint, function (args) {\n\t        args[0].hideCompleted = false;\n\t      });\n\t    }\n\t\n\t    tween(state);\n\t\n\t    if (state.hideCompleted) {\n\t      renderer.turnAnimationSteps.shift();\n\t    }\n\t  };\n\t}\n\t\n\t// animation to shrink all activeEls\n\tfunction shrinkActive(renderer) {\n\t\n\t  var tweenLength = 500; // in ms\n\t\n\t  // need to store shiftCompleted in object so that it\n\t  // can be modified by tween's onComplete function\n\t  // (just passing a boolean won't work because booleans\n\t  // don't keep memory references and thus it wouldn't\n\t  // be the same variable)\n\t  var state = {\n\t    shrinkCompleted: true\n\t  };\n\t\n\t  return function () {\n\t    if (!renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = true;\n\t\n\t    state.shrinkCompleted = true;\n\t\n\t    for (var i = 0; i < renderer.activeEls.children.length; i++) {\n\t      var element = renderer.activeEls.children[i];\n\t\n\t      if (!element.tween) {\n\t\n\t        element.tween = tweens.getNewTween(element, {\n\t          radius: 0,\n\t          loopedRadius: element.radius * 1.75,\n\t          loopedAlpha: 0\n\t        }, tweenLength, tweens.easeInOutQuint, function (args) {\n\t          args[0].shrinkCompleted = false;\n\t        });\n\t      }\n\t\n\t      element.tween(state);\n\t    }\n\t\n\t    if (state.shrinkCompleted) {\n\t      renderer.turnAnimationSteps.shift();\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * sorts array into a 2d array of [x][y] values, where the\n\t * x-value determines the delay time before it can start\n\t * shifting downwards. Then returns the animation function.\n\t */\n\tfunction shiftDown(renderer) {\n\t\n\t  var baseShiftFrameDelay = 2;\n\t\n\t  // sort elements into 2D array of [x][y]\n\t  var sortedShift2DArr = [];\n\t\n\t  for (var i = 0; i < renderer.shiftingEls.children.length; i++) {\n\t    var element = renderer.shiftingEls.children[i];\n\t    var flooredX = Math.floor(element.currentX);\n\t\n\t    if (!sortedShift2DArr[flooredX]) {\n\t      sortedShift2DArr[flooredX] = [];\n\t    }\n\t\n\t    sortedShift2DArr[flooredX].push(element);\n\t  }\n\t\n\t  sortedShift2DArr = sortedShift2DArr.filter(Boolean); // removes empty\n\t\n\t  // add frame delays based on prevX and prevY values\n\t  for (var _i = 0; _i < sortedShift2DArr.length; _i++) {\n\t    var elementArr = sortedShift2DArr[_i];\n\t\n\t    for (var j = 0; j < elementArr.length; j++) {\n\t      elementArr[j].shiftFrameDelay = baseShiftFrameDelay * _i;\n\t    }\n\t  }\n\t\n\t  var tweenLength = 500; // in ms\n\t\n\t  var state = {\n\t    shiftCompleted: true\n\t  };\n\t\n\t  return function () {\n\t    if (!renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = true;\n\t\n\t    state.shiftCompleted = true;\n\t\n\t    var i = void 0,\n\t        j = void 0,\n\t        element = void 0;\n\t\n\t    for (i = 0; i < sortedShift2DArr.length; i++) {\n\t      for (j = 0; j < sortedShift2DArr[i].length; j++) {\n\t        element = sortedShift2DArr[i][j];\n\t\n\t        // increment wait frames down until 0\n\t        if (element.shiftFrameDelay > 0) {\n\t          element.shiftFrameDelay -= 1;\n\t          state.shiftCompleted = false;\n\t          continue;\n\t        }\n\t\n\t        // stores new tween function to be called on every frame\n\t        if (!element.tween) {\n\t          element.tween = tweens.getNewTween(element, {\n\t            prevY: element.currentY\n\t          }, tweenLength, tweens.easeInOutQuad, function (args) {\n\t            args[0].shiftCompleted = false;\n\t          });\n\t        }\n\t\n\t        element.tween(state);\n\t      }\n\t    }\n\t\n\t    if (state.shiftCompleted) {\n\t      for (i = 0; i < renderer.shiftingEls.length; i++) {\n\t        renderer.shiftingEls[i].tween = null;\n\t      }\n\t\n\t      renderer.turnAnimationSteps.shift();\n\t    }\n\t  };\n\t}\n\t\n\t// increase radius of new els until they reach normal size\n\tfunction populateNew(renderer) {\n\t  var totalNewEls = renderer.newEls.children.length;\n\t  for (var i = 0; i < totalNewEls; i++) {\n\t    renderer.newEls.children[i].spawnFrameDelay = Math.floor(Math.random() * totalNewEls / 3);\n\t  }\n\t\n\t  var tweenLength = 500; // in ms\n\t\n\t  var state = {\n\t    populationComplete: true\n\t  };\n\t\n\t  return function () {\n\t    if (renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = false;\n\t    if (!renderer.canShowNew) renderer.canShowNew = true;\n\t\n\t    state.populationComplete = true;\n\t\n\t    for (var _i2 = 0; _i2 < renderer.newEls.children.length; _i2++) {\n\t      var element = renderer.newEls.children[_i2];\n\t\n\t      if (element.spawnFrameDelay > 0) {\n\t        element.spawnFrameDelay -= 1;\n\t        state.populationComplete = false;\n\t        continue;\n\t      }\n\t\n\t      // stores new tween function to be called on every frame\n\t      if (!element.tween) {\n\t        element.tween = tweens.getNewTween(element, {\n\t          radius: element.destRadius,\n\t          loopedRadius: element.destRadius\n\t        }, tweenLength, tweens.easeOutBack, function (args) {\n\t          args[0].populationComplete = false;\n\t        });\n\t      }\n\t\n\t      element.tween(state);\n\t    }\n\t\n\t    if (state.populationComplete) {\n\t      for (var _i3 = 0; _i3 < renderer.newEls.length; _i3++) {\n\t        renderer.newEls[_i3].tween = null;\n\t      }\n\t\n\t      renderer.turnAnimationSteps.shift();\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getNewTween = getNewTween;\n\texports.linearTween = linearTween;\n\texports.easeInQuad = easeInQuad;\n\texports.easeOutQuad = easeOutQuad;\n\texports.easeInOutQuad = easeInOutQuad;\n\texports.easeInCubic = easeInCubic;\n\texports.easeOutCubic = easeOutCubic;\n\texports.easeInOutCubic = easeInOutCubic;\n\texports.easeInQuint = easeInQuint;\n\texports.easeOutQuint = easeOutQuint;\n\texports.easeInOutQuint = easeInOutQuint;\n\texports.easeOutBack = easeOutBack;\n\texports.easeOutBounce = easeOutBounce;\n\t/**\n\t * Returns a tweening function that can be called on every frame,\n\t * modifying the object's properties that should be changed over time.\n\t * \n\t * Optional onProgress and onComplete callbacks can passed in, and will\n\t * be called at end of function depending on whether it is still tweening\n\t * or has been completed.\n\t */\n\tfunction getNewTween(obj, props, duration, easingFn, onProgress, onComplete) {\n\t  var starts = {};\n\t  var changes = {};\n\t  var startTime = new Date();\n\t\n\t  var prop;\n\t\n\t  for (prop in props) {\n\t    starts[prop] = obj[prop];\n\t    changes[prop] = props[prop] - starts[prop];\n\t  }\n\t\n\t  var currentTime = void 0;\n\t\n\t  return function () {\n\t    currentTime = new Date() - startTime;\n\t\n\t    if (currentTime < duration) {\n\t\n\t      for (prop in props) {\n\t        obj[prop] = easingFn(currentTime, starts[prop], changes[prop], duration);\n\t      }\n\t\n\t      // pass in arguments in case you need to reference\n\t      // something when calling returned function in callback\n\t      if (onProgress) onProgress(arguments);\n\t    } else {\n\t\n\t      currentTime = duration;\n\t      for (var prop in props) {\n\t        obj[prop] = easingFn(currentTime, starts[prop], changes[prop], duration);\n\t      }\n\t\n\t      // pass in arguments in case you need to reference\n\t      // something when calling returned function in callback\n\t      if (onComplete) onComplete(arguments);\n\t    }\n\t  };\n\t}\n\t\n\t/* eslint-disable */\n\t\n\t// simple linear tweening - no easing\n\t// t: current time, b: beginning value, c: change in value, d: duration\n\tfunction linearTween(t, b, c, d) {\n\t  return c * t / d + b;\n\t}\n\t\n\t///////////// QUADRATIC EASING: t^2 ///////////////////\n\t\n\t// quadratic easing in - accelerating from zero velocity\n\t// t: current time, b: beginning value, c: change in value, d: duration\n\t// t and d can be in frames or seconds/milliseconds\n\tfunction easeInQuad(t, b, c, d) {\n\t  return c * (t /= d) * t + b;\n\t};\n\t\n\t// quadratic easing out - decelerating to zero velocity\n\tfunction easeOutQuad(t, b, c, d) {\n\t  return -c * (t /= d) * (t - 2) + b;\n\t};\n\t\n\t// quadratic easing in/out - acceleration until halfway, then deceleration\n\tfunction easeInOutQuad(t, b, c, d) {\n\t  if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n\t  return -c / 2 * (--t * (t - 2) - 1) + b;\n\t};\n\t\n\t/**\n\t * Other Penner Easing fns\n\t * (see: https://github.com/bit101/CodingMath/blob/master/episode29/penner_easing.as)\n\t */\n\t\n\t///////////// CUBIC EASING: t^3 ///////////////////////\n\t\n\t// cubic easing in - accelerating from zero velocity\n\t// t: current time, b: beginning value, c: change in value, d: duration\n\t// t and d can be frames or seconds/milliseconds\n\tfunction easeInCubic(t, b, c, d) {\n\t  return c * (t /= d) * t * t + b;\n\t};\n\t\n\t// cubic easing out - decelerating to zero velocity\n\tfunction easeOutCubic(t, b, c, d) {\n\t  return c * ((t = t / d - 1) * t * t + 1) + b;\n\t};\n\t\n\t// cubic easing in/out - acceleration until halfway, then deceleration\n\tfunction easeInOutCubic(t, b, c, d) {\n\t  if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n\t  return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t};\n\t\n\t///////////// QUINTIC EASING: t^5  ////////////////////\n\t\n\t// quintic easing in - accelerating from zero velocity\n\t// t: current time, b: beginning value, c: change in value, d: duration\n\t// t and d can be frames or seconds/milliseconds\n\tfunction easeInQuint(t, b, c, d) {\n\t  return c * (t /= d) * t * t * t * t + b;\n\t};\n\t\n\t// quintic easing out - decelerating to zero velocity\n\tfunction easeOutQuint(t, b, c, d) {\n\t  return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t};\n\t\n\t// quintic easing in/out - acceleration until halfway, then deceleration\n\tfunction easeInOutQuint(t, b, c, d) {\n\t  if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n\t  return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t};\n\t\n\t///////////// OTHER EASING  ////////////////////\n\t\n\t// back easing out - moving towards target, overshooting it slightly, then reversing and coming back to target\n\tfunction easeOutBack(t, b, c, d, s) {\n\t  if (s == undefined) s = 1.70158;\n\t  return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t};\n\t\n\t// bounce easing out\n\tfunction easeOutBounce(t, b, c, d) {\n\t  if ((t /= d) < 1 / 2.75) {\n\t    return c * (7.5625 * t * t) + b;\n\t  } else if (t < 2 / 2.75) {\n\t    return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n\t  } else if (t < 2.5 / 2.75) {\n\t    return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n\t  } else {\n\t    return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n\t  }\n\t};\n\t\n\t/* eslint-enable */\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar ticker = new PIXI.ticker.Ticker();\n\tmodule.exports = ticker;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = animationTest;\n\tfunction animationTest(board) {\n\t  var element = void 0;\n\t  for (var i = 0; i < board.grid.elements.length; i++) {\n\t    element = board.grid.elements[i];\n\t    if (Math.random() < 0.5) {\n\t      board.activeEls.push(element);\n\t    } else {\n\t      // console.log('don\\'t make active');\n\t    }\n\t  }\n\t\n\t  board.turn();\n\t}\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/","import 'app.scss';\n\n\n\n// import PIXI from 'pixi.js';\n\n// imports\nimport GameView from \"./GameView\";\n\n//first thing: monkey patch\nif ( !location.origin ) {\n  location.origin = location.protocol + \"//\" + location.host;\n}\n\n//an easy to access global object\nwindow.Common = window.Common || {};\n\n// set debug status\nwindow.debug = true;\n\n$( window ).resize();\n\nclass MyApp {\n  constructor() {\n    this.$el = $('#content');\n\n    this.gameView = new GameView({\n      container: this.$el,\n    });\n\n    this.start();\n  }\n\n  start() {\n    this.gameView.start();\n\n    $( window ).resize();\n  }\n\n}\n\n//kickoff app\nif (inIframe()) {\n  $(window).load(() => {\n    console.log('starting app (in iframe)');\n    setTimeout(() => {\n      start();\n    }, 1000);\n  });\n} else {\n  $(window).load(() => {\n    console.log('starting app');\n    start();\n  });\n}\n\n\nfunction start() {\n  window.app = new MyApp();\n  (function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();stats.domElement.style.cssText='position:fixed;left:0;top:0;z-index:10000';document.body.appendChild(stats.domElement);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src='//rawgit.com/mrdoob/stats.js/master/build/stats.min.js';document.head.appendChild(script);})()\n}\n\nfunction inIframe() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/app.js\n **/","import layoutManager from \"./layoutManager\";\nimport mathUtils from \"./utils/mathUtils\";\nimport Board from \"./Board\";\nimport Renderer from \"./Renderer\";\nimport ticker from \"./utils/ticker\";\n\nimport animationTest from \"./utils/animationTest\";\n\nclass GameView {\n  constructor(options) {\n    this.el = PIXI.autoDetectRenderer(layoutManager.width,\n      layoutManager.height, {backgroundColor : 0xEEEEEE, antialias: true});\n\n    options.container.append(this.el.view);\n\n    this.mousePressed = false;\n    this.currentMousePos = {\n      clientX: 0,\n      clientY: 0\n    };\n\n  }\n\n  start() {\n    this.board = new Board();\n    this.renderController = new Renderer({\n      renderer: this.el,\n      board: this.board\n    });\n\n    this.bindEvents();\n\n    ticker.add(this.update, this);\n    ticker.start();\n  }\n\n  bindEvents() {\n    document.addEventListener('mousedown', this.mouseDown.bind(this));\n    document.addEventListener('mousemove', this.mouseMove.bind(this));\n    document.addEventListener('mouseup', this.mouseUp.bind(this));\n  }\n\n  /**\n   * Touch Events\n   */\n  mouseDown(e) {\n    if (this.board.hasChanged) return;\n\n    let hoverEl = this.getHoverEl(e);\n    if (!hoverEl) return;\n    if (!this.mouseInEl(e, hoverEl)) return;\n\n    this.board.activeEls.push(hoverEl);\n    this.mousePressed = true;\n\n    this.currentMousePos = e;\n  }\n\n  mouseMove(e) {\n    if (!this.mousePressed ||!this.board.activeEls.length ||\n      this.board.hasChanged) return;\n\n    this.currentMousePos = e;\n\n    let hoverEl = this.getHoverEl(this.currentMousePos);\n    if (!hoverEl) return;\n\n\n    if (this.mouseInEl(this.currentMousePos, hoverEl) &&\n      !this.board.loopCompleted) {\n\n      this.handleMouseInEl(hoverEl);\n    } else {\n      this.handleMouseOutEl(hoverEl);\n    }\n\n\n  }\n\n  mouseUp(e) {\n    if (this.board.hasChanged) return;\n\n    this.board.turn();\n    this.mousePressed = false;\n  }\n\n\n  getHoverEl(e) {\n    let x = e.clientX;\n    let y = e.clientY;\n\n    for (let i = 0; i < this.board.grid.elements.length; i++) {\n      let element = this.board.grid.elements[i];\n      let elRect = {\n        x: element.gridPos.x * this.board.elWidth,\n        y: element.gridPos.y * this.board.elHeight,\n        width: this.board.elWidth,\n        height: this.board.elHeight\n      }\n\n      if (mathUtils.pointInRect(x, y, elRect)) {\n        return element;\n      }\n    }\n  }\n\n  mouseInEl(e, element) {\n    let x = e.clientX;\n    let y = e.clientY;\n    let circle = {\n      x: element.gridPos.x * this.board.elWidth + this.board.elWidth / 2,\n      y: element.gridPos.y * this.board.elHeight + this.board.elHeight / 2,\n      radius: this.board.maxElSize / 2\n    }\n\n    return mathUtils.circlePointCollision(x, y, circle);\n  }\n\n  handleMouseInEl(hoverEl) {\n    let currentEl = this.board.activeEls[this.board.activeEls.length - 1];\n    let neighbors = this.board.grid.getNeighbors(currentEl.gridPos);\n\n    // hoverEl is NOT in activeEls array but IS a neighbor of currentEl\n    // and is of the same type as is the same type as currentEl\n    if (hoverEl.dotType.id === currentEl.dotType.id &&\n      this.board.activeEls.indexOf(hoverEl) === -1 &&\n      neighbors.indexOf(hoverEl) !== -1) {\n\n      this.board.activeEls.push(hoverEl);\n    }\n\n    // loop is completed\n    else if (hoverEl.dotType.id === currentEl.dotType.id &&\n      this.board.activeEls.indexOf(hoverEl) === 0 &&\n      neighbors.indexOf(hoverEl) !== -1 &&\n      this.board.activeEls.length >= 4) {\n\n      this.board.activeEls.push(hoverEl);\n      this.board.loopCompleted = true;\n    }\n  }\n\n\n  /**\n   * This method is kinda complicated. In short, it determines when to remove\n   * the last element of the activeEls array when the user is trying to. It could\n   * probably be simplified vastly but it seems to work for now.\n   *\n   * Note: if window.debug = true and you set window.rectBetweenRecents to\n   * the rectangle, it will be drawn in renderer.render().\n   *\n   * Steps:\n   * - get the most recent and the second most recent activeEls\n   * - get the grid vector pointing from the most recent to the second most recent\n   * - generate a rectangle to represent this vector in screen space and modify\n   * the x, y, width, & height such that it doesn't overlap too much with either element\n   * - do a hit / collision test to check if cursor is in this rectangle\n   * and if so remove / [].pop() the most recent activeEl\n   */\n  handleMouseOutEl(hoverEl) {\n\n    // only try to move back if array length is 2 or more\n    if (this.board.activeEls.length < 2) return;\n\n    let mostRecentActiveEl =\n      this.board.activeEls[this.board.activeEls.length - 1];\n\n    let secondMostRecentActiveEl =\n      this.board.activeEls[this.board.activeEls.length - 2];\n\n    let vectToSecondMostRecent =\n      secondMostRecentActiveEl.gridPos.subtract(mostRecentActiveEl.gridPos);\n\n    let rectBetweenRecents = {\n      width: vectToSecondMostRecent.x * this.board.elWidth,\n      height: vectToSecondMostRecent.y * this.board.elHeight,\n    };\n\n    if (rectBetweenRecents.width !== 0) // horizontal collision rectangle\n    {\n      let shiftX;\n      if (rectBetweenRecents.width > 0) {\n        rectBetweenRecents.width -= this.board.maxElSize;\n        shiftX = (this.board.maxElSize / 2);\n      } else {\n        rectBetweenRecents.width += this.board.maxElSize;\n        shiftX = -(this.board.maxElSize / 2);\n      }\n\n      rectBetweenRecents.height = this.board.maxElSize / 1.5;\n\n      rectBetweenRecents.y = (mostRecentActiveEl.gridPos.y * this.board.elHeight) +\n        (this.board.elHeight / 2) - (rectBetweenRecents.height / 2);\n      rectBetweenRecents.x = (mostRecentActiveEl.gridPos.x * this.board.elWidth) +\n        (this.board.elWidth / 2) + shiftX;\n\n    } else // vertical collision rectangle\n    {\n      let shiftY;\n      if (rectBetweenRecents.height > 0) {\n        rectBetweenRecents.height -= this.board.maxElSize;\n        shiftY = (this.board.maxElSize / 2);\n      } else {\n        rectBetweenRecents.height += this.board.maxElSize;\n        shiftY = -(this.board.maxElSize / 2);\n      }\n\n      rectBetweenRecents.width = this.board.maxElSize / 1.5;\n\n      rectBetweenRecents.y = (mostRecentActiveEl.gridPos.y * this.board.elHeight) +\n        (this.board.elHeight / 2) + shiftY;\n      rectBetweenRecents.x = (mostRecentActiveEl.gridPos.x * this.board.elWidth) +\n        (this.board.elWidth / 2) - (rectBetweenRecents.width / 2);\n    }\n\n    if (mathUtils.pointInRect(this.currentMousePos.clientX,\n      this.currentMousePos.clientY, rectBetweenRecents)) {\n\n      this.board.activeEls.pop();\n      if (this.board.loopCompleted) this.board.loopCompleted = false;\n    }\n\n    // window.rectBetweenRecents = rectBetweenRecents;\n  }\n\n\n  /**\n   * Main Update Loop\n   */\n  update() {\n\n    if (window.debug && !this.board.hasChanged) {\n      animationTest(this.board);\n    }\n\n    this.renderController.update(this.board, this.currentMousePos);\n    this.renderController.renderer.render(this.renderController.stage);\n  }\n}\n\nmodule.exports = GameView;\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/GameView.js\n **/","\n/**\n * LayoutManager is a singleton. Only one instance should be used per game\n */\n\nclass LayoutManager {\n  constructor() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    \n    this.bindEvents();\n  }\n\n  bindEvents() {\n    window.addEventListener('resize', (e) => {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n    });\n  }\n}\n\n\nconst layoutManager = new LayoutManager();\n\nmodule.exports = layoutManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/layoutManager.js\n **/","/**\n * Basic Math Utilities\n */\nvar utils = {\n\n\n  /**\n   * Normalize:\n   * Calculates a percent (btwn 0 and 1) that a value\n   * represents between a minimum and maximum value\n   *\n   * - Can handle when max is less than min\n   * - Can handle negative numbers\n   * - Can handle when val is greater or less than max / min\n   */\n  norm: function(val, min, max) {\n    return (val - min) / (max - min);\n  },\n\n\n  /**\n   * Lerp (Linear Interpolation):\n   * Takes a normalized number / percentage (between 0 and 1)\n   * and returns the value of it between a range of min and max\n   */\n  lerp: function(norm, min, max) {\n    return (max - min) * norm + min;\n  },\n\n\n  /**\n   * Map:\n   * Converts a value in one range into\n   * the corresponding value in another range\n   */\n  map: function(val, sourceMin, sourceMax, destMin, destMax) {\n    return this.lerp(this.norm(val, sourceMin, sourceMax), destMin, destMax);\n  },\n\n\n  /**\n   * Clamp:\n   * Forces value into range if it is\n   * greater than max or less than min\n   *\n   * - Achieved by calculating the maximum of val and min,\n   * then calculating the minimum of what was returned and max\n   * - Updated function uses second Math.min / Math.max calls\n   * so the function still works when min is greater than max\n   * (good for negative numbers, etc)\n   */\n  clamp: function(val, min, max) {\n    // return Math.min(Math.max(val, min), max);\n    return Math.min(Math.max(val, Math.min(min,max)), Math.max(min, max));\n  },\n\n\n  /**\n   * Distance:\n   * Calculates distance between two x,y points by using\n   * Pythagoan Theorum to get the hypotenuse.\n   */\n  distance: function(x0, y0, x1, y1) {\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n  },\n\n  /**\n   * Circle Collision:\n   * Given two circles, c0 and c1, calculates if distance between\n   * them is greater or less than the sum of their radii\n   */\n  circleCollision: function(c0, c1) {\n    return this.distance(c0.x, c0.y, c1.x, c1.y) <= c0.radius + c1.radius;\n  },\n\n  /**\n   * Circle / Point Collision:\n   * Calculates if distance between point and circle is less than radius\n   */\n  circlePointCollision: function(x, y, circle) {\n    return this.distance(circle.x, circle.y, x, y) <= circle.radius;\n  },\n\n  /**\n   * Point in Rectangle:\n   * Calculates if point is in a rectangle based on rectangle's\n   * x,y coords, width, and height\n   */\n  pointInRect: function(x, y, rect) {\n    return this.inRange(x, rect.x, rect.x + rect.width) &&\n      this.inRange(y, rect.y, rect.y + rect.height);\n  },\n\n  /**\n   * In Range:\n   * Calcuates if value is between min and max\n   * - Using Math.min & Math.max, min can be larger\n   * than max and vice versa (useful for when width/height\n   * of a rectangle are negative values)\n   */\n  inRange: function(val, min, max) {\n    return val >= Math.min(min,max) && val <= Math.max(min,max);\n  },\n\n  /**\n   * Range Intersect:\n   * Calculates if there is any overlap between two ranges\n   * - Useful for calculating if two rectangles are overlapping\n   * - Updated function wraps everything in Math.min / Math.max\n   * so that mins can be larger than maxes and vise versa\n   */\n  rangeIntersect: function(min0, max0, min1, max1) {\n    // return max0 >= min1 && min0 <= max1;\n    return Math.max(min0, max0) >= Math.min(min1, max1) &&\n      Math.min(min0, max0) <= Math.max(min1, max1);\n  },\n\n  /**\n   * Rectangle Intersect\n   * Calculates if two rectangles intersect one another by\n   * comparing the ranges with rangeIntersect function\n   */\n  rectIntersect: function(r0, r1) {\n    return this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n      this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n  },\n\n  /**\n   * randomRange:\n   * Calculates a random number between given range\n   * - Works with negative numbers (ex: get random number btwn -10 and 10)\n   */\n  randomRange: function(min, max) {\n    return min + Math.random() * (max - min);\n  },\n\n  /**\n   * randomInt:\n   * Calculates a random integer between given range\n   */\n  randomInt: function(min, max) {\n    return Math.floor(min + Math.random() * (max - min + 1));\n  },\n\n  /**\n   * Random Distribution:\n   * Returns a weighted random number based on the number of\n   * iterations (the higher the iterations, the higher the\n   * chance that the number returned will be in the middle\n   * of the range).\n   */\n  randomDist: function(min, max, iterations) {\n    var total = 0;\n\n    for (var i = 0; i < iterations; i++) {\n      total += this.randomRange(min, max);\n    }\n\n    return total / iterations;\n  },\n\n\n  roundToPlaces: function(value, places) {\n    var mult = Math.pow(10, places);\n    return Math.round(value * mult) / mult;\n  },\n\n  roundNearest: function(value, nearest) {\n    return Math.round(value / nearest) * nearest;\n  },\n\n\n  /**\n   * Degrees to Radians:\n   * Calculates radians from degrees\n   */\n  degreesToRads: function(degrees) {\n    return degrees / 180 * Math.PI;\n  },\n\n\n  /**\n   * Radians to Degrees:\n   * Calculates degrees from radians\n   */\n  radsToDegrees: function(radians) {\n    return radians * 180 / Math.PI;\n  },\n\n\n  /**\n   * RotateTo:\n   * Takes a point in space and rotates it by\n   * an angle around space's center (0,0) coord.\n   *\n   * - You could rotate it around a different\n   * point by modifying point's (x,y) to reflect\n   * a different center coordinate.\n   */\n  rotateTo(p0, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n\n    var p1 = {\n      x: (p0.x * cos) - (p0.y * sin),\n      y: (p0.y * cos) + (p0.x * sin)\n    };\n    return p1;\n  },\n\n\n  /**\n   * Quadratic Bezier Curve:\n   * Two end points and one control point inbetween.\n   * Standard function for computing quadratic\n   * bezier curves. Basically just a super simplified\n   * combination of linear interpolations\n   */\n  quadraticBezier: function(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x +\n           (1 - t) * 2 * t * p1.x +\n           t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y +\n           (1 - t) * 2 * t * p1.y +\n           t * t * p2.y;\n    return pFinal;\n  },\n\n  /**\n   * Cubic Bezier Curve:\n   * Two end points and two control point inbetween.\n   */\n  cubicBezier: function(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x +\n           Math.pow(1 - t, 2) * 3 * t * p1.x +\n           (1 - t) * 3 * t * t * p2.x +\n           t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y +\n           Math.pow(1 - t, 2) * 3 * t * p1.y +\n           (1 - t) * 3 * t * t * p2.y +\n           t * t * t * p3.y;\n    return pFinal;\n  },\n\n  /**\n   * Multi Curve Draw:\n   * Draws a series of connected quadratic curves. Gives\n   * the illusion of being a bezier curve with many mid-points\n   * but not actually 100% accurate. Often good enough though.\n   */\n  multicurve: function(points, context) {\n    var p0, p1, midx, midy;\n\n    context.moveTo(points[0].x, points[0].y);\n\n    for(var i = 1; i < points.length - 2; i += 1) {\n      p0 = points[i];\n      p1 = points[i + 1];\n      midx = (p0.x + p1.x) / 2;\n      midy = (p0.y + p1.y) / 2;\n      context.quadraticCurveTo(p0.x, p0.y, midx, midy);\n    }\n    p0 = points[points.length - 2];\n    p1 = points[points.length - 1];\n    context.quadraticCurveTo(p0.x, p0.y, p1.x, p1.y);\n  }\n\n\n};\n\n\nmodule.exports = utils;\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/utils/mathUtils.js\n **/","import layoutManager from \"./layoutManager\";\nimport Vector from \"./Vector\";\nimport Grid from \"./Grid\";\nimport Dot from \"./GameElements/Dot\";\n\n\nclass Board {\n  constructor (options) {\n    if (!options) options = {};\n    options.width = options.width || 16;\n    options.height = options.height || 8;\n\n    this.grid = new Grid({\n      width: options.width,\n      height: options.height\n    })\n\n    // calculate element dimensions\n    this.elWidth = layoutManager.width / this.grid.width;\n    this.elHeight = layoutManager.height / this.grid.height;\n    this.maxElSize = Math.min(this.elWidth, this.elHeight) / 2;\n\n    // populate grid's elements array\n    for (let i = 0; i < this.grid.height; i++) {\n      for (let j = 0; j < this.grid.width; j++) {\n        let newDot = new Dot({\n          x: j,\n          y: i,\n        });\n        this.grid.setElement(new Vector(j, i), newDot);\n      }\n    }\n\n    this.hasChanged = false; // DO NOT SET THIS VALUE DIRECTLY\n\n    this.cloned = null;\n\n    this.activeEls = [];\n    this.loopCompleted = false;\n  }\n\n\n  /**\n   * used to set hasChanged var\n   *\n   * - hasChanged should only be set to \"true\"\n   * at the end of the \"turn\" function\n   * - hasChanged should only be set to \"false\"\n   * by the renderer once all relevant turn animations are done\n   */\n  setChanged(bool) {\n    this.hasChanged = bool;\n\n    if (!bool) {\n      this.activeEls = [];\n      this.loopCompleted = false;\n    }\n  }\n\n\n  /**\n   * Turn / Update Methods\n   */\n  turn() {\n    if (this.activeEls.length < 2) {\n      this.setChanged(false);\n      return;\n    }\n\n    this.startTurn();\n\n    this.removeActiveElsFromGrid();\n\n    this.addPreviousPositions();\n\n    this.shiftElsDown();\n\n    this.createNewEls();\n\n    this.finishTurn();\n  }\n\n  startTurn() {\n\n    // if loop is complete, change activeEls to be array including\n    // every single element of activeEls type / id / color.\n    // ALSO: need to pop lasts element of activeEls array\n    // because it is a repeat of the last.\n    if (this.loopCompleted) {\n      this.activeEls.pop();\n      let typeId = this.activeEls[0].dotType.id;\n      for (let i = 0; i < this.grid.elements.length; i++) {\n        let element = this.grid.elements[i];\n        if (element.dotType.id === typeId &&\n          this.activeEls.indexOf(element) === -1) {\n\n          this.activeEls.push(element);\n        }\n      }\n    }\n  }\n\n  removeActiveElsFromGrid () {\n    // remove activeEls from grid\n    for (let i = 0; i < this.grid.elements.length; i++) {\n      let element = this.grid.elements[i];\n\n      if (this.activeEls.indexOf(element) !== -1) {\n        this.grid.setElement(element.gridPos, null);\n      }\n    }\n  }\n\n\n  /**\n   * adds property to each grid element with a reference\n   * to its previous position for use when animating\n   */\n  addPreviousPositions() {\n    for (let i = 0; i < this.grid.elements.length; i++) {\n      let element = this.grid.elements[i];\n      if (!element) continue;\n\n      element.previousGridPos = new Vector(element.gridPos.x, element.gridPos.y);\n    }\n  }\n\n  shiftElsDown() {\n    // sort activeEls so that lowest y's are first in arr\n    // (not doing this results in errors while shifting stuff down)\n    this.activeEls.sort((a, b) => {\n      return a.gridPos.y - b.gridPos.y;\n    });\n\n    // shift everything down\n    for (let i = 0; i < this.activeEls.length; i++) {\n      let element = this.activeEls[i];\n\n      let posVect = element.gridPos;\n      let y = posVect.y - 1;\n      let x = posVect.x;\n      while(y >= 0) {\n\n        let elAbove = this.grid.getElement(new Vector(x, y));\n\n        this.grid.setElement(new Vector(x, y + 1), elAbove);\n        this.grid.setElement(new Vector(x, y), null);\n\n        y--;\n      }\n    }\n\n    // if element exists in position, correct it's gridPos.\n    for (let i = 0; i < this.grid.height; i++) {\n      for (let j = 0; j < this.grid.width; j++) {\n        let gridPos = new Vector(j, i);\n\n        let element = this.grid.getElement(gridPos);\n        if (element) {\n          element.gridPos = gridPos;\n        }\n      }\n    }\n  }\n\n  createNewEls() {\n    for (let i = 0; i < this.grid.height; i++) {\n      for (let j = 0; j < this.grid.width; j++) {\n        let gridPos = new Vector(j, i);\n\n        let element = this.grid.getElement(gridPos);\n        if (!element) {\n          let newDot = new Dot(gridPos);\n          this.grid.setElement(gridPos, newDot);\n        }\n      }\n    }\n  }\n\n  finishTurn() {\n    this.setChanged(true);\n  }\n\n\n}\n\nmodule.exports = Board;\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/Board.js\n **/","\n\nclass Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  // should ONLY use this when manipulating grid vectors\n  add(vector) {\n    return new Vector(this.x + vector.x, this.y + vector.y);\n  }\n  subtract(vector) {\n    return new Vector(this.x - vector.x, this.y - vector.y);\n  }\n\n  multiply(val) {\n    return new Vector(this.x * val, this.y * val);\n  }\n}\n\nmodule.exports = Vector;\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/Vector.js\n **/","import Vector from \"./Vector\";\n\n\nconst NEIGHBORS = [\n  new Vector(0, -1), // NORTH\n  new Vector(1, 0), // EAST\n  new Vector(0, 1), // SOUTH\n  new Vector(-1, 0) // WEST\n];\n\nclass Grid {\n  constructor(options) {\n    this.width = options.width;\n    this.height = options.height;\n\n    // create elements array\n    this.elements = new Array(this.width * this.height);\n  }\n\n\n  /**\n   * Element Vector methods\n   */\n  getElement(vector) {\n    return this.elements[(vector.y * this.width) + vector.x];\n  }\n\n  setElement(vector, el) {\n    this.elements[(vector.y * this.width) + vector.x] = el;\n  }\n\n  getNeighbors(vector) {\n    let neighbors = [];\n    for (let i = 0; i < NEIGHBORS.length; i++) {\n      neighbors.push(this.getElement(vector.add(NEIGHBORS[i])));\n    }\n\n    return neighbors;\n  }\n}\n\n\nmodule.exports = Grid;\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/Grid.js\n **/","import mathUtils from \"../utils/mathUtils\";\nimport Vector from \"../Vector\";\n\nconst DOTTYPES = [\n  {\n    id: 1,\n    name: 'red',\n    color: 0xf15c3b\n  },\n  // {\n  //   id: 2,\n  //   name: 'yellow',\n  //   color: 0xe7dd00\n  // },\n  {\n    id: 3,\n    name: 'green',\n    color: 0x89ed90\n  },\n  {\n    id: 4,\n    name: 'blue',\n    color: 0x8abdff\n  },\n  {\n    id: 5,\n    name: 'purple',\n    color: 0x9d5ab7\n  }\n];\n\nclass Dot {\n  constructor(options) {\n    this.gridPos = new Vector(options.x, options.y);\n    this.dotType = DOTTYPES[mathUtils.randomInt(0, DOTTYPES.length - 1)];\n  }\n}\n\nmodule.exports = Dot;\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/GameElements/Dot.js\n **/","import Dot from \"./rendererComponents/Dot\";\nimport * as turnAnimations from \"./rendererComponents/turnAnimations\";\nimport * as tweens from \"./utils/tweens\";\n\nclass Renderer {\n  constructor(options) {\n    this.renderer = options.renderer;\n    this.stage = new PIXI.Container();\n\n    this.activeElConnections = new PIXI.Graphics();\n    this.stage.addChild(this.activeElConnections);\n\n    this.staticStateEls = new PIXI.Container(); // this is used when turn animations aren't happening\n    this.stage.addChild(this.staticStateEls);\n\n    this.prepareStaticData(options.board);\n    this.resetRendererState();\n\n  }\n\n  resetRendererState() {\n    this.isAnimatingTurn = false;\n\n    if (this.stage.children.indexOf(this.activeEls) !== -1) {\n      this.stage.removeChild(this.activeEls);\n      this.activeEls.destroy(true);\n    }\n    this.activeEls = new PIXI.Container();\n    this.stage.addChild(this.activeEls);\n\n    if (this.stage.children.indexOf(this.shiftingEls) !== -1) {\n      this.stage.removeChild(this.shiftingEls);\n      this.shiftingEls.destroy(true);\n    }\n    this.shiftingEls = new PIXI.Container();\n    this.stage.addChild(this.shiftingEls);\n\n    if (this.stage.children.indexOf(this.nonShiftingEls) !== -1) {\n      this.stage.removeChild(this.nonShiftingEls);\n      this.nonShiftingEls.destroy(true);\n    }\n    this.nonShiftingEls = new PIXI.Container();\n    this.stage.addChild(this.nonShiftingEls);\n\n    if (this.stage.children.indexOf(this.newEls) !== -1) {\n      this.stage.removeChild(this.newEls);\n      this.newEls.destroy(true);\n    }\n    this.newEls = new PIXI.Container();\n    this.stage.addChild(this.newEls);\n\n    this.turnAnimationSteps = [];\n    this.usePrevPosForShiftingEls = false;\n    this.canShowNew = false;\n\n  }\n\n  /**\n   * Prepares array of data required to render board in static state\n   */\n  prepareStaticData(board) {\n\n    if (board) // should only run when game starts\n    {\n      for (let i = 0; i < board.grid.elements.length; i++) {\n        let element = board.grid.elements[i];\n\n        let dot = new Dot({\n          currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n          currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n          dotType: element.dotType,\n          radius: board.maxElSize / 2,\n          loopedRadius: board.maxElSize / 2,\n          maxLoopedRadius: board.maxElSize / 1.5,\n          loopedAlpha: 0.5,\n        });\n        this.staticStateEls.addChild(dot);\n      }\n    }\n    else // this should run whenever a turn is over and animations are done\n    {\n\n      this.staticStateEls.removeChildren();\n\n      for (let i = this.shiftingEls.children.length - 1; i >= 0; i--) {\n        let element = this.shiftingEls.removeChildAt(i);\n        this.staticStateEls.addChild(element);\n        if (element.tween) element.tween = null;\n      }\n      for (let i = this.nonShiftingEls.children.length - 1; i >= 0; i--) {\n        let element = this.nonShiftingEls.removeChildAt(i);\n        this.staticStateEls.addChild(element);\n        if (element.tween) element.tween = null;\n      }\n      for (let i = this.newEls.children.length - 1; i >= 0; i--) {\n        let element = this.newEls.removeChildAt(i);\n        this.staticStateEls.addChild(element);\n        if (element.tween) element.tween = null;\n      }\n\n      // MUST GET RID OF ACTIVE ELEMENTS\n      for (let i = this.activeEls.children.length - 1; i >= 0; i--) {\n        let element = this.activeEls.children[i];\n        this.activeEls.removeChild(element);\n        element.remove();\n        element.destroy(true);\n      }\n\n      this.activeElConnections.clear();\n      this.activeElConnections.alpha = 1;\n    }\n\n   }\n\n\n  /**\n   * Prepares arrays of data required for turn animations to complete\n   */\n  prepareTurnAnimationData(board) {\n    this.isAnimatingTurn = true;\n\n    this.staticStateEls.removeChildren();\n\n    for (let i = 0; i < board.activeEls.length; i++) {\n      let element = board.activeEls[i];\n\n      let dot = new Dot({\n        currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n        currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n        dotType: element.dotType,\n        radius: board.maxElSize / 2,\n        loopedRadius: board.loopCompleted ? board.maxElSize / 1.5 : board.maxElSize / 2,\n        maxLoopedRadius: board.maxElSize / 1.5,\n        loopedAlpha: 0.5,\n        loopCompleted: board.loopCompleted\n      });\n      this.activeEls.addChild(dot);\n    }\n\n    for (let i = 0; i < board.grid.elements.length; i++) {\n      let element = board.grid.elements[i];\n\n      // elements that are changing position\n      if (element.previousGridPos &&\n        (element.previousGridPos.x !== element.gridPos.x ||\n        element.previousGridPos.y !== element.gridPos.y)) {\n\n        let dot = new Dot({\n          currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n          currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n          prevX: element.previousGridPos.x * board.elWidth + board.elWidth / 2,\n          prevY: element.previousGridPos.y * board.elHeight + board.elHeight / 2,\n          dotType: element.dotType,\n          radius: board.maxElSize / 2,\n          loopedRadius: board.maxElSize / 2,\n          maxLoopedRadius: board.maxElSize / 1.5,\n          loopedAlpha: 0.5,\n        });\n        this.shiftingEls.addChild(dot);\n      }\n\n      // new elements\n      else if (!element.previousGridPos) {\n\n        let dot = new Dot({\n          currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n          currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n          prevX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n          prevY: -100,\n          dotType: element.dotType,\n          radius: 0,\n          destRadius: board.maxElSize / 2,\n          loopedRadius: 0,\n          maxLoopedRadius: board.maxElSize / 1.5,\n          loopedAlpha: 0.5,\n        });\n        this.newEls.addChild(dot);\n\n      }\n\n      // elements that are not changing position\n      else {\n\n        let dot = new Dot({\n          currentX: element.gridPos.x * board.elWidth + board.elWidth / 2,\n          currentY: element.gridPos.y * board.elHeight + board.elHeight / 2,\n          dotType: element.dotType,\n          radius: board.maxElSize / 2,\n          loopedRadius: board.maxElSize / 2,\n          maxLoopedRadius: board.maxElSize / 1.5,\n          loopedAlpha: 0.5,\n        });\n        this.nonShiftingEls.addChild(dot);\n      }\n    }\n\n\n    this.usePrevPosForShiftingEls = true;\n    this.canShowNew = false;\n\n    // this.turnAnimationSteps.push(turnAnimations.waitForFrames(this, 50));\n    this.turnAnimationSteps.push(turnAnimations.hideActiveElConnection(this));\n    this.turnAnimationSteps.push(turnAnimations.shrinkActive(this));\n    this.turnAnimationSteps.push(turnAnimations.shiftDown(this));\n    this.turnAnimationSteps.push(turnAnimations.populateNew(this));\n  }\n\n\n  /**\n   * Main Render function\n   * TODO: add comments and optimize\n   */\n  update(board, currentMousePos) {\n    if (board.hasChanged && !this.isAnimatingTurn) {\n      this.prepareTurnAnimationData(board);\n    }\n\n    if (this.isAnimatingTurn) {\n      if (this.turnAnimationSteps.length > 0) {\n        this.turnAnimationSteps[0](board, currentMousePos);\n      }\n\n      this.drawTurnAnimationBoard(board);\n\n      if (this.turnAnimationSteps.length === 0) {\n        this.prepareStaticData();\n        this.resetRendererState();\n        board.setChanged(false);\n      }\n\n    } else {\n\n      this.drawActiveElConnections(board, currentMousePos);\n\n      for (let i = 0; i < this.staticStateEls.children.length; i++) {\n        let element = this.staticStateEls.children[i];\n\n        if (element) {\n\n\n          // increases / decreases size of loopedRadius\n          if (board.loopCompleted &&\n            board.activeEls[0].dotType === element.dotType &&\n            element.loopedRadius < element.maxLoopedRadius &&\n            !element.tween) {\n\n            element.tween = tweens.getNewTween(element, {\n              loopedRadius: element.maxLoopedRadius\n            }, 300, tweens.easeInOutQuad, null,\n            () => {\n              element.tween = null;\n            });\n\n          } else if (!board.loopCompleted &&\n            element.loopedRadius > element.radius &&\n            !element.tween) {\n\n            element.tween = tweens.getNewTween(element, {\n              loopedRadius: element.radius\n            }, 300, tweens.easeInOutQuad, null,\n            () => {\n              element.tween = null;\n            });\n\n          }\n          if (element.tween) element.tween();\n          element.update(false);\n        }\n      }\n    }\n  }\n\n  drawTurnAnimationBoard(board) {\n    let i;\n    let element;\n\n    if (this.activeEls.children.length > 0) {\n      for (i = 0; i < this.activeEls.children.length; i++) {\n        element = this.activeEls.children[i];\n        element.update(false);\n      }\n    }\n\n    for (i = 0; i < this.shiftingEls.children.length; i++) {\n      element = this.shiftingEls.children[i];\n      element.update(this.usePrevPosForShiftingEls);\n    }\n    for (i = 0; i < this.nonShiftingEls.children.length; i++) {\n      element = this.nonShiftingEls.children[i];\n      element.update(false);\n    }\n\n    if (this.canShowNew) {\n      for (i = 0; i < this.newEls.children.length; i++) {\n        element = this.newEls.children[i];\n        element.update(false);\n      }\n    }\n  }\n\n  drawElement(board, element, usePreviousPos) {\n\n    if (element.radius < 0) return;\n\n    this.context.fillStyle = element.dotType.color;\n\n    let x = usePreviousPos ? element.prevX : element.currentX;\n    let y = usePreviousPos ? element.prevY : element.currentY;\n\n    if (element.loopedRadius > element.radius) {\n\n      this.context.globalAlpha = element.loopedAlpha;\n      this.context.beginPath();\n      this.context.arc(x, y, element.loopedRadius, 0, Math.PI * 2, false);\n      this.context.fill();\n      this.context.globalAlpha = 1;\n    }\n\n    this.context.beginPath();\n    this.context.arc(x, y, element.radius, 0, Math.PI * 2, false);\n    this.context.fill();\n  }\n\n\n\n  drawActiveElConnections(board, currentMousePos) {\n    this.activeElConnections.clear();\n\n    if (board.activeEls.length < 1) return;\n\n    this.activeElConnections.lineStyle(board.maxElSize / 4, 0x333333);\n\n    if (board.activeEls.length > 1) {\n      for (var i = 1; i < board.activeEls.length; i++) {\n        let prevEl = board.activeEls[i - 1];\n        this.activeElConnections.moveTo(prevEl.gridPos.x * board.elWidth + board.elWidth / 2,\n          prevEl.gridPos.y * board.elHeight + board.elHeight / 2);\n\n        let currentEl = board.activeEls[i];\n        this.activeElConnections.lineTo(currentEl.gridPos.x * board.elWidth + board.elWidth / 2,\n          currentEl.gridPos.y * board.elHeight + board.elHeight / 2);\n      }\n    }\n\n    let lastEl = board.activeEls[board.activeEls.length - 1];\n    this.activeElConnections.moveTo(lastEl.gridPos.x * board.elWidth + board.elWidth / 2,\n      lastEl.gridPos.y * board.elHeight + board.elHeight / 2);\n\n    if (board.loopCompleted) {\n      let firstEl = board.activeEls[0];\n      this.activeElConnections.lineTo(firstEl.gridPos.x * board.elWidth + board.elWidth / 2,\n        firstEl.gridPos.y * board.elHeight + board.elHeight / 2);\n    } else {\n      this.activeElConnections.lineTo(currentMousePos.clientX, currentMousePos.clientY);\n    }\n  }\n\n}\n\nmodule.exports = Renderer;\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/Renderer.js\n **/","class Dot extends PIXI.Container {\n  constructor(options) {\n    super();\n\n    this.currentX = options.currentX;\n    this.currentY = options.currentY;\n    this.prevX = options.prevX;\n    this.prevY = options.prevY;\n    this.dotType = options.dotType;\n    this.radius = Math.floor(options.radius);\n    this.destRadius = options.destRadius ? Math.floor(options.destRadius) : null;\n    this.loopedRadius = Math.floor(options.loopedRadius);\n    this.maxLoopedRadius = Math.floor(options.maxLoopedRadius);\n    this.loopedAlpha = options.loopedAlpha;\n    this.loopCompleted = options.loopCompleted;\n\n    this.createChildren();\n    this.update(false);\n  }\n\n  createChildren() {\n    let loop = circleSpriteGenerator.createNewCircle(this.loopedRadius,\n      this.maxLoopedRadius, this.dotType.color, this.loopedAlpha, false);\n\n    // in new elements, the initial radius is set as 0 and the element is given\n    // an additional parameter, 'destRadius' containing the element's final radius\n    // once it has grown / been populated. this is needed because the\n    // 'baseRadius' argument in a Circle's constructor is used to draw a\n    // bitmap of that size, and if it's value is 0, no matter how much you \n    // increase the scale / grow it, it won't show up. \n    let mainBaseRadius = (typeof this.destRadius === 'number' ?\n      this.destRadius : this.radius);\n\n    // let main = new Circle(0, 0, this.radius, mainBaseRadius,\n    //   this.dotType.color, 1);\n    let main = circleSpriteGenerator\n      .createNewCircle(this.radius, mainBaseRadius, this.dotType.color, 1, true);\n\n    this.addChild(loop);\n    this.addChild(main);\n  }\n\n  update(usePreviousPosition) {\n    let x = usePreviousPosition ? this.prevX : this.currentX;\n    let y = usePreviousPosition ? this.prevY : this.currentY;\n\n    if (this.position.x !== x || this.position.y !== y) {\n      this.position.x = x;\n      this.position.y = y;\n    }\n\n    // redraw looped circle\n    if (this.children[0].currentRadius !== this.loopedRadius ||\n      this.children[0].alpha !== this.loopedAlpha) {\n\n      this.children[0].update(this.loopedRadius, this.loopedAlpha);\n    }\n\n    // redraw main circle\n    if (this.children[1].currentRadius !== this.radius) {\n      this.children[1].update(this.radius, 1);\n    }\n  }\n\n  remove() {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      let element = this.children[i];\n\n      element.destroy();\n      this.removeChild(element);\n      \n    }\n  }\n}\n\n\nclass Circle extends PIXI.Sprite {\n  constructor(texture, currentRadius, baseRadius, color, alpha) {\n    super(texture);\n\n    this.anchor.x = 0.5;\n    this.anchor.y = 0.5;\n\n    this.baseRadius = baseRadius;\n    this.currentRadius = currentRadius;\n    this.color = color;\n    this.alpha = alpha;\n\n    // this.lineStyle(0);\n    // this.beginFill(color, this.alpha);\n    // // this.drawCircle(x, y, radius);\n    // this.drawEllipse(0, 0, this.baseRadius, this.baseRadius);\n    // this.endFill();\n\n    this.update(this.currentRadius, alpha);\n  }\n\n  update(radius, alpha) {\n    this.currentRadius = radius;\n\n    this.alpha = alpha;\n    this.scale.x = this.currentRadius / this.baseRadius;\n    this.scale.y = this.currentRadius / this.baseRadius;\n\n  }\n}\n\n\n// There was an error being thrown\n// when destroying PIXI.Graphics elements that used\n// a drawCircle method were being removed / destroyed\n// in Chrome (not Firefox). Seems like drawEllipse works though\nclass CircleSpriteGenerator {\n  constructor() {\n    this.graphics = new PIXI.Graphics();\n\n    this.loopCircleTextures = {};\n    this.circleTextures = {};\n  }\n\n  createNewCircle(currentRadius, baseRadius, color, alpha, isMain) {\n    let texture;\n\n    let cache = isMain ? 'circleTextures' : 'loopCircleTextures';\n\n    if (this[cache].hasOwnProperty(color.toString())) {\n      texture = this[cache][color.toString()];\n\n    } else {\n      // this.graphics.width = baseRadius * 2;\n      // this.graphics.height = baseRadius * 2;\n      this.graphics.lineStyle();\n      this.graphics.beginFill(color, 1);\n      this.graphics.drawEllipse(baseRadius, baseRadius, baseRadius, baseRadius);\n\n      texture = this.graphics.generateTexture();\n      this[cache][color.toString()] = texture;\n\n      this.graphics.clear();\n    }\n\n    let sprite = new Circle(texture, currentRadius,\n      baseRadius, currentRadius, alpha);\n\n    return sprite;\n  }\n}\nconst circleSpriteGenerator = new CircleSpriteGenerator();\n\n\nexport default Dot;\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/rendererComponents/Dot.js\n **/","/**\n * These functions represent the steps each turn animation in the Renderer\n */\n\nimport * as tweens from \"../utils/tweens\";\n\n\n// returns a function that has access to the number of frames\n// to wait (in a closure) and counts down to that. it shifts itself\n// off of turnAnimationSteps array once the value is 0 or less\nexport function waitForFrames(renderer, frames) {\n  return function() {\n    frames--;\n\n    if (frames < 0) {\n      renderer.turnAnimationSteps.shift();\n    }\n  }\n}\n\n\n// hides activeElConnections lines\nexport function hideActiveElConnection(renderer) {\n  let tweenLength = 100; // in ms\n\n  let state = {\n    hideCompleted: true\n  };\n\n  let tween;\n\n  return function() {\n    if (!renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = true;\n\n    state.hideCompleted = true;\n\n    if (!tween) {\n      tween = tweens.getNewTween(renderer.activeElConnections, {\n        alpha: 0,\n      }, tweenLength, tweens.easeInOutQuint,\n      (args) => {\n        args[0].hideCompleted = false;\n      });\n    }\n\n    tween(state);\n\n    if (state.hideCompleted) {\n      renderer.turnAnimationSteps.shift();\n    }\n  }\n}\n\n\n// animation to shrink all activeEls\nexport function shrinkActive(renderer) {\n\n  let tweenLength = 500; // in ms\n\n  // need to store shiftCompleted in object so that it\n  // can be modified by tween's onComplete function\n  // (just passing a boolean won't work because booleans\n  // don't keep memory references and thus it wouldn't\n  // be the same variable)\n  let state = {\n    shrinkCompleted: true\n  };\n\n  return function() {\n    if (!renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = true;\n\n    state.shrinkCompleted = true;\n\n    for (let i = 0; i < renderer.activeEls.children.length; i++) {\n      let element = renderer.activeEls.children[i];\n\n      if (!element.tween) {\n\n        element.tween = tweens.getNewTween(element, {\n          radius: 0,\n          loopedRadius: element.radius * 1.75,\n          loopedAlpha: 0\n        }, tweenLength, tweens.easeInOutQuint,\n        (args) => {\n          args[0].shrinkCompleted = false;\n        });\n      }\n\n      element.tween(state);\n\n    }\n\n    if (state.shrinkCompleted) {\n      renderer.turnAnimationSteps.shift();\n    }\n  }\n}\n\n\n/**\n * sorts array into a 2d array of [x][y] values, where the\n * x-value determines the delay time before it can start\n * shifting downwards. Then returns the animation function.\n */\nexport function shiftDown(renderer) {\n\n  let baseShiftFrameDelay = 2;\n\n  // sort elements into 2D array of [x][y]\n  let sortedShift2DArr = [];\n\n  for (let i = 0; i < renderer.shiftingEls.children.length; i++) {\n    let element = renderer.shiftingEls.children[i];\n    let flooredX = Math.floor(element.currentX);\n\n    if (!sortedShift2DArr[flooredX]) {\n      sortedShift2DArr[flooredX] = [];\n    }\n\n    sortedShift2DArr[flooredX].push(element);\n  }\n\n  sortedShift2DArr = sortedShift2DArr.filter(Boolean); // removes empty\n\n  // add frame delays based on prevX and prevY values\n  for (let i = 0; i < sortedShift2DArr.length; i++) {\n    let elementArr = sortedShift2DArr[i];\n\n    for (let j = 0; j < elementArr.length; j++) {\n      elementArr[j].shiftFrameDelay = baseShiftFrameDelay * i;\n    }\n  }\n\n  let tweenLength = 500; // in ms\n\n  let state = {\n    shiftCompleted: true\n  };\n\n  return function() {\n    if (!renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = true;\n\n    state.shiftCompleted = true;\n\n    let i, j, element;\n\n    for (i = 0; i < sortedShift2DArr.length; i++) {\n      for (j = 0; j < sortedShift2DArr[i].length; j++) {\n        element = sortedShift2DArr[i][j];\n\n        // increment wait frames down until 0\n        if (element.shiftFrameDelay > 0) {\n          element.shiftFrameDelay -= 1;\n          state.shiftCompleted = false;\n          continue;\n        }\n\n        // stores new tween function to be called on every frame\n        if (!element.tween) {\n          element.tween = tweens.getNewTween(element, {\n            prevY: element.currentY\n          }, tweenLength, tweens.easeInOutQuad,\n          (args) => {\n            args[0].shiftCompleted = false;\n          });\n        }\n\n        element.tween(state);\n      }\n    }\n\n    if (state.shiftCompleted) {\n      for (i = 0; i < renderer.shiftingEls.length; i++) {\n        renderer.shiftingEls[i].tween = null;\n      }\n\n      renderer.turnAnimationSteps.shift();\n    }\n  }\n}\n\n\n// increase radius of new els until they reach normal size\nexport function populateNew(renderer) {\n  let totalNewEls = renderer.newEls.children.length;\n  for (let i = 0; i < totalNewEls; i++) {\n    renderer.newEls.children[i].spawnFrameDelay = Math.floor(\n      Math.random() * totalNewEls / 3);\n  }\n\n  let tweenLength = 500; // in ms\n\n  let state = {\n    populationComplete: true\n  };\n\n  return function() {\n    if (renderer.usePrevPosForShiftingEls) renderer.usePrevPosForShiftingEls = false;\n    if (!renderer.canShowNew) renderer.canShowNew = true;\n\n    state.populationComplete = true;\n\n    for (let i = 0; i < renderer.newEls.children.length; i++) {\n      let element = renderer.newEls.children[i];\n\n      if (element.spawnFrameDelay > 0) {\n        element.spawnFrameDelay -= 1;\n        state.populationComplete = false;\n        continue;\n      }\n\n      // stores new tween function to be called on every frame\n      if (!element.tween) {\n        element.tween = tweens.getNewTween(element, {\n          radius: element.destRadius,\n          loopedRadius: element.destRadius\n        }, tweenLength, tweens.easeOutBack,\n        (args) => {\n          args[0].populationComplete = false;\n        });\n      }\n\n      element.tween(state);\n\n    }\n\n    if (state.populationComplete) {\n      for (let i = 0; i < renderer.newEls.length; i++) {\n        renderer.newEls[i].tween = null;\n      }\n\n      renderer.turnAnimationSteps.shift();\n    }\n  }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/rendererComponents/turnAnimations.js\n **/","/**\n * Returns a tweening function that can be called on every frame,\n * modifying the object's properties that should be changed over time.\n * \n * Optional onProgress and onComplete callbacks can passed in, and will\n * be called at end of function depending on whether it is still tweening\n * or has been completed.\n */\nexport function getNewTween(obj, props, duration, easingFn, onProgress, onComplete) {\n  let starts = {};\n  let changes = {};\n  let startTime = new Date();\n\n  var prop;\n\n  for(prop in props) {\n    starts[prop] = obj[prop];\n    changes[prop] = props[prop] - starts[prop];\n  }\n\n  let currentTime;\n\n  return function() {\n    currentTime = new Date() - startTime;\n\n    if (currentTime < duration) {\n\n      for (prop in props) {\n        obj[prop] = easingFn(currentTime, starts[prop], changes[prop], duration);\n      }\n\n      // pass in arguments in case you need to reference\n      // something when calling returned function in callback\n      if (onProgress) onProgress(arguments);\n\n    } else {\n\n      currentTime = duration;\n      for(var prop in props) {\n        obj[prop] = easingFn(currentTime, starts[prop], changes[prop], duration);\n      }\n\n      // pass in arguments in case you need to reference\n      // something when calling returned function in callback\n      if (onComplete) onComplete(arguments);\n    }\n  }\n}\n\n\n/* eslint-disable */\n\n// simple linear tweening - no easing\n// t: current time, b: beginning value, c: change in value, d: duration\nexport function linearTween(t, b, c, d) {\n  return c * t / d + b;\n}\n\n ///////////// QUADRATIC EASING: t^2 ///////////////////\n\n// quadratic easing in - accelerating from zero velocity\n// t: current time, b: beginning value, c: change in value, d: duration\n// t and d can be in frames or seconds/milliseconds\nexport function easeInQuad(t, b, c, d) {\n  return c*(t/=d)*t + b;\n};\n\n// quadratic easing out - decelerating to zero velocity\nexport function easeOutQuad(t, b, c, d) {\n  return -c *(t/=d)*(t-2) + b;\n};\n\n// quadratic easing in/out - acceleration until halfway, then deceleration\nexport function easeInOutQuad(t, b, c, d) {\n  if ((t/=d/2) < 1) return c/2*t*t + b;\n  return -c/2 * ((--t)*(t-2) - 1) + b;\n};\n\n\n\n\n/**\n * Other Penner Easing fns\n * (see: https://github.com/bit101/CodingMath/blob/master/episode29/penner_easing.as)\n */\n\n\n ///////////// CUBIC EASING: t^3 ///////////////////////\n\n// cubic easing in - accelerating from zero velocity\n// t: current time, b: beginning value, c: change in value, d: duration\n// t and d can be frames or seconds/milliseconds\nexport function easeInCubic(t, b, c, d) {\n  return c*(t/=d)*t*t + b;\n};\n\n// cubic easing out - decelerating to zero velocity\nexport function easeOutCubic(t, b, c, d) {\n  return c*((t=t/d-1)*t*t + 1) + b;\n};\n\n// cubic easing in/out - acceleration until halfway, then deceleration\nexport function easeInOutCubic(t, b, c, d) {\n  if ((t/=d/2) < 1) return c/2*t*t*t + b;\n  return c/2*((t-=2)*t*t + 2) + b;\n};\n\n\n ///////////// QUINTIC EASING: t^5  ////////////////////\n\n// quintic easing in - accelerating from zero velocity\n// t: current time, b: beginning value, c: change in value, d: duration\n// t and d can be frames or seconds/milliseconds\nexport function easeInQuint(t, b, c, d) {\n  return c*(t/=d)*t*t*t*t + b;\n};\n\n// quintic easing out - decelerating to zero velocity\nexport function easeOutQuint(t, b, c, d) {\n  return c*((t=t/d-1)*t*t*t*t + 1) + b;\n};\n\n// quintic easing in/out - acceleration until halfway, then deceleration\nexport function easeInOutQuint(t, b, c, d) {\n  if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;\n  return c/2*((t-=2)*t*t*t*t + 2) + b;\n};\n\n\n ///////////// OTHER EASING  ////////////////////\n\n// back easing out - moving towards target, overshooting it slightly, then reversing and coming back to target\nexport function easeOutBack(t, b, c, d, s) {\n  if (s == undefined) s = 1.70158;\n  return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;\n};\n\n\n// bounce easing out\nexport function easeOutBounce(t, b, c, d) {\n  if ((t/=d) < (1/2.75)) {\n    return c*(7.5625*t*t) + b;\n  } else if (t < (2/2.75)) {\n    return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;\n  } else if (t < (2.5/2.75)) {\n    return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;\n  } else {\n    return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;\n  }\n};\n\n\n\n/* eslint-enable */\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/utils/tweens.js\n **/","const ticker = new PIXI.ticker.Ticker();\nmodule.exports = ticker;\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/utils/ticker.js\n **/","\nexport default function animationTest(board) {\n  let element;\n  for (let i = 0; i < board.grid.elements.length; i++) {\n    element = board.grid.elements[i];\n    if (Math.random() < 0.5) {\n      board.activeEls.push(element);\n    } else {\n      // console.log('don\\'t make active');\n    }\n  }\n\n  board.turn();\n}\n\n\n/** WEBPACK FOOTER **\n ** ../public/assets/js/user/utils/animationTest.js\n **/"],"sourceRoot":""}